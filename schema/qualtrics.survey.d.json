{
    "title": "Survey definition",
    "type": "object",
    "additionalProperties": true,
    "x-examples": {
        "example": {
            "QuestionCount": "1",
            "SurveyOptions": {
                "BackButton": "false",
                "SaveAndContinue": "true",
                "SurveyProtection": "PublicSurvey",
                "BallotBoxStuffingPrevention": "false",
                "NoIndex": "Yes",
                "SecureResponseFiles": "true",
                "SurveyExpiration": "None",
                "SurveyTermination": "DefaultMessage",
                "Header": "",
                "Footer": "",
                "ProgressBarDisplay": "None",
                "PartialData": "+1 week",
                "ValidationMessage": "",
                "PreviousButton": " ← ",
                "NextButton": " → ",
                "SkinLibrary": "myoungldev",
                "SkinType": "templated",
                "Skin": {
                    "brandingId": null,
                    "templateId": "*base",
                    "overrides": null
                },
                "NewScoring": 1,
                "SurveyLanguage": "EN",
                "ActiveResponseSet": "RS_9StC05LnuKmpcI5",
                "SurveyStartDate": null,
                "SurveyExpirationDate": null,
                "SurveyCreationDate": "2018-10-29T12:14:05Z"
            },
            "SurveyID": "SV_0ODVm59K4i9tjcp",
            "SurveyName": "new prooooooject",
            "SurveyStatus": "Inactive",
            "LastModified": "2018-10-29T12:36:12Z",
            "BrandID": "myoungldev",
            "OwnerID": "UR_3Cz41f8fIqINzaR",
            "DivisionID": "DV_7WEhUEQlbizXLvf",
            "LastAccessed": "2018-10-29T12:36:12Z",
            "CreatorID": "UR_3Cz41f8fIqINzaR",
            "LastActivated": "2018-10-29T12:36:12Z",
            "Questions": {
                "QID1": {
                    "QuestionText": "Click to write the question text",
                    "DataExportTag": "Q1",
                    "QuestionType": "MC",
                    "Selector": "SAVR",
                    "SubSelector": "TX",
                    "Configuration": {
                        "QuestionDescriptionOption": "UseText"
                    },
                    "QuestionDescription": "Click to write the question text",
                    "Choices": {
                        "1": {
                            "Display": "Click to write Choice 1"
                        },
                        "2": {
                            "Display": "Click to write Choice 2"
                        },
                        "3": {
                            "Display": "Click to write Choice 3"
                        }
                    },
                    "ChoiceOrder": [
                        "1",
                        "2",
                        "3"
                    ],
                    "Validation": {
                        "Settings": {
                            "ForceResponse": "OFF",
                            "ForceResponseType": "ON",
                            "Type": "None"
                        }
                    },
                    "Language": [],
                    "NextChoiceId": 4,
                    "NextAnswerId": 1,
                    "QuestionID": "QID1",
                    "QuestionText_Unsafe": "Click to write the question text"
                }
            },
            "Blocks": {
                "BL_3rC3WnIo3l3cryt": {
                    "Type": "Default",
                    "Description": "Default Question Block",
                    "ID": "BL_3rC3WnIo3l3cryt",
                    "BlockElements": [
                        {
                            "Type": "Question",
                            "QuestionID": "QID1"
                        }
                    ]
                },
                "BL_8eugjlkTG4F1zWl": {
                    "Type": "Trash",
                    "Description": "Trash / Unused Questions",
                    "ID": "BL_8eugjlkTG4F1zWl"
                }
            },
            "ResponseSets": {
                "RS_9StC05LnuKmpcI5": "Default Response Set"
            },
            "SurveyFlow": {
                "Flow": [
                    {
                        "ID": "BL_3rC3WnIo3l3cryt",
                        "Type": "Block",
                        "FlowID": "FL_2"
                    }
                ],
                "Properties": {
                    "Count": 2
                },
                "FlowID": "FL_1",
                "Type": "Root"
            },
            "Scoring": {
                "ScoringCategories": [],
                "ScoringCategoryGroups": [],
                "ScoringSummaryCategory": "SC_cT0X8utcTBtf20R",
                "ScoringSummaryAfterQuestions": 0,
                "ScoringSummaryAfterSurvey": 0,
                "DefaultScoringCategory": "SC_cT0X8utcTBtf20R",
                "AutoScoringCategory": "SC_cT0X8utcTBtf20R"
            },
            "ProjectInfo": {
                "SurveyID": "SV_0ODVm59K4i9tjcp",
                "ProjectCategory": "CORE",
                "ProjectType": null,
                "CompositionType": null,
                "ContentBundle": null,
                "SchemaVersion": "1.1.0"
            },
            "BrandBaseURL": "https://myoungldev.b1-prv.qualtrics.com"
        }
    },
    "x-tags": [
        "Schemas"
    ],
    "properties": {
        "QuestionCount": {
            "description": "Number of questions in the survey",
            "type": "string"
        },
        "SurveyOptions": {
            "$ref": "#/definitions/SurveyOptions"
        },
        "SurveyID": {
            "$ref": "#/definitions/SurveyID"
        },
        "SurveyName": {
            "type": "string"
        },
        "SurveyStatus": {
            "$ref": "#/definitions/SurveyStatus"
        },
        "LastModified": {
            "type": "string",
            "format": "date-time"
        },
        "BrandID": {
            "type": "string"
        },
        "OwnerID": {
            "$ref": "#/definitions/UserID"
        },
        "DivisionID": {
            "$ref": "#/definitions/DivisionID"
        },
        "LastAccessed": {
            "type": "string",
            "format": "date-time",
            "description": "The date the survey was last accessed "
        },
        "CreatorID": {
            "$ref": "#/definitions/UserID"
        },
        "LastActivated": {
            "type": "string",
            "format": "date-time"
        },
        "Questions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/QuestionDefinition"
            },
            "description": "Survey questions."
        },
        "Blocks": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/BlockDefinition"
            },
            "description": "Survey blocks."
        },
        "ResponseSets": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Survey response sets."
        },
        "SurveyFlow": {
            "$ref": "#/definitions/FlowDefinition"
        },
        "Scoring": {
            "$ref": "#/definitions/ScoringDefinition"
        },
        "ProjectInfo": {
            "$ref": "#/definitions/ProjectInfoDefinition"
        },
        "BrandBaseURL": {
            "type": "string",
            "format": "uri"
        }
    },
    "required": [
        "SurveyOptions",
        "SurveyID",
        "SurveyName",
        "SurveyStatus",
        "LastModified",
        "BrandID",
        "OwnerID",
        "LastAccessed",
        "CreatorID",
        "LastActivated",
        "Questions",
        "Blocks",
        "ResponseSets",
        "SurveyFlow",
        "Scoring",
        "ProjectInfo",
        "BrandBaseURL"
    ],
    "definitions": {
        "SurveyOptions": {
            "title": "Survey Options",
            "type": "object",
            "additionalProperties": true,
            "required": [
                "BackButton",
                "BallotBoxStuffingPrevention",
                "Header",
                "Footer",
                "NextButton",
                "NoIndex",
                "PartialData",
                "PreviousButton",
                "ProgressBarDisplay",
                "SaveAndContinue",
                "SecureResponseFiles",
                "Skin",
                "SkinLibrary",
                "SkinType",
                "SurveyProtection",
                "SurveyExpiration",
                "SurveyTermination",
                "ValidationMessage"
            ],
            "properties": {
                "AnonymizeResponse": {
                    "$ref": "#/definitions/AnonymizeResponse"
                },
                "Autofocus": {
                    "$ref": "#/definitions/Autofocus"
                },
                "Autoadvance": {
                    "$ref": "#/definitions/Autoadvance"
                },
                "AutoadvancePages": {
                    "$ref": "#/definitions/AutoadvancePages"
                },
                "AvailableLanguages": {
                    "$ref": "#/definitions/AvailableLanguages"
                },
                "BackButton": {
                    "$ref": "#/definitions/BackButton"
                },
                "BallotBoxStuffingPrevention": {
                    "$ref": "#/definitions/BallotBoxStuffingPrevention"
                },
                "BallotBoxStuffingPreventionBehavior": {
                    "$ref": "#/definitions/BallotBoxStuffingPreventionBehavior"
                },
                "BallotBoxStuffingPreventionMessage": {
                    "$ref": "#/definitions/BallotBoxStuffingPreventionMessage"
                },
                "BallotBoxStuffingPreventionMessageLibrary": {
                    "$ref": "#/definitions/BallotBoxStuffingPreventionMessageLibrary"
                },
                "BallotBoxStuffingPreventionURL": {
                    "$ref": "#/definitions/BallotBoxStuffingPreventionURL"
                },
                "CollectGeoLocation": {
                    "$ref": "#/definitions/CollectGeoLocation"
                },
                "CustomStyles": {
                    "$ref": "#/definitions/CustomStyles"
                },
                "CustomLanguages": {
                    "$ref": "#/definitions/CustomLanguages"
                },
                "EmailThankYou": {
                    "$ref": "#/definitions/EmailThankYou"
                },
                "EOSMessage": {
                    "$ref": "#/definitions/EOSMessage"
                },
                "EOSRedirectURL": {
                    "$ref": "#/definitions/EOSRedirectURL"
                },
                "ExternalCSS": {
                    "$ref": "#/definitions/ExternalCSS"
                },
                "headerMid": {
                    "$ref": "#/definitions/headerMid"
                },
                "Header": {
                    "$ref": "#/definitions/Header"
                },
                "footerMid": {
                    "$ref": "#/definitions/footerMid"
                },
                "Footer": {
                    "$ref": "#/definitions/Footer"
                },
                "InactiveSurvey": {
                    "$ref": "#/definitions/InactiveSurvey"
                },
                "InactiveMessage": {
                    "$ref": "#/definitions/InactiveMessage"
                },
                "InactiveMessageLibrary": {
                    "$ref": "#/definitions/InactiveMessageLibrary"
                },
                "NoIndex": {
                    "$ref": "#/definitions/NoIndex"
                },
                "nextButtonMid": {
                    "$ref": "#/definitions/nextButtonMid"
                },
                "NextButton": {
                    "$ref": "#/definitions/NextButton"
                },
                "PageTransition": {
                    "$ref": "#/definitions/PageTransition"
                },
                "PartialData": {
                    "$ref": "#/definitions/PartialData"
                },
                "PartialDataCloseAfter": {
                    "$ref": "#/definitions/PartialDataCloseAfter"
                },
                "Password": {
                    "$ref": "#/definitions/Password"
                },
                "PasswordProtection": {
                    "$ref": "#/definitions/PasswordProtection"
                },
                "previousButtonMid": {
                    "$ref": "#/definitions/previousButtonMid"
                },
                "PreviousButton": {
                    "$ref": "#/definitions/PreviousButton"
                },
                "ProgressBarDisplay": {
                    "$ref": "#/definitions/ProgressBarDisplay"
                },
                "QuestionsPerPage": {
                    "$ref": "#/definitions/QuestionsPerPage"
                },
                "RecaptchaV3": {
                    "$ref": "#/definitions/RecaptchaV3"
                },
                "RefererCheck": {
                    "$ref": "#/definitions/RefererCheck"
                },
                "RefererURL": {
                    "$ref": "#/definitions/RefererURL"
                },
                "ResponseSummary": {
                    "$ref": "#/definitions/ResponseSummary"
                },
                "SaveAndContinue": {
                    "$ref": "#/definitions/SaveAndContinue"
                },
                "SecureResponseFiles": {
                    "$ref": "#/definitions/SecureResponseFiles"
                },
                "Skin": {
                    "$ref": "#/definitions/Skin"
                },
                "SurveyExpiration": {
                    "$ref": "#/definitions/SurveyExpiration"
                },
                "SurveyExpirationDate": {
                    "$ref": "#/definitions/SurveyExpirationDate"
                },
                "SurveyMetaDescription": {
                    "$ref": "#/definitions/SurveyMetaDescription"
                },
                "SurveyLanguage": {
                    "$ref": "#/definitions/SurveyLanguage"
                },
                "SurveyName": {
                    "$ref": "#/definitions/SurveyName"
                },
                "SurveyProtection": {
                    "$ref": "#/definitions/SurveyProtection"
                },
                "SurveyStartDate": {
                    "$ref": "#/definitions/SurveyStartDate"
                },
                "SurveyTermination": {
                    "$ref": "#/definitions/SurveyTermination"
                },
                "SurveyTitle": {
                    "$ref": "#/definitions/SurveyTitle"
                },
                "ThankYouEmailMessage": {
                    "$ref": "#/definitions/ThankYouEmailMessage"
                },
                "ThankYouEmailMessageLibrary": {
                    "$ref": "#/definitions/ThankYouEmailMessageLibrary"
                },
                "ValidateMessage": {
                    "$ref": "#/definitions/ValidateMessage"
                },
                "ValidationMessage": {
                    "$ref": "#/definitions/ValidationMessage"
                },
                "ValidationMessageLibrary": {
                    "$ref": "#/definitions/ValidationMessageLibrary"
                }
            },
            "x-examples": {
                "example": {
                    "ActiveResponseSet": "RS_elnA4pEPIOXsQ3H",
                    "BackButton": "false",
                    "BallotBoxStuffingPrevention": "false",
                    "CustomStyles": [],
                    "Footer": "",
                    "Header": "",
                    "NewScoring": 1,
                    "NextButton": " → ",
                    "NoIndex": "Yes",
                    "PartialData": "+1 week",
                    "PreviousButton": " ← ",
                    "ProgressBarDisplay": "None",
                    "SaveAndContinue": "true",
                    "SecureResponseFiles": "true",
                    "Skin": {
                        "brandingId": null,
                        "overrides": null,
                        "templateId": "*base"
                    },
                    "SkinLibrary": "myoungldev",
                    "SkinType": "templated",
                    "SurveyCreationDate": "2019-02-08T17:59:17Z",
                    "SurveyExpiration": "None",
                    "SurveyExpirationDate": null,
                    "SurveyLanguage": "EN",
                    "SurveyProtection": "PublicSurvey",
                    "SurveyStartDate": null,
                    "SurveyTermination": "DefaultMessage",
                    "ValidationMessage": ""
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "AnonymizeResponse": {
            "description": "Scrub all respondent identifying information such as IP or location data.",
            "default": "No",
            "type": "string",
            "enum": [
                "No",
                "Yes"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "Autofocus": {
            "description": "If true, provide autofocus for questions.",
            "type": "boolean",
            "x-tags": [
                "Schemas"
            ]
        },
        "Autoadvance": {
            "description": "Enables autoadvance on questions",
            "type": "boolean",
            "x-tags": [
                "Schemas"
            ]
        },
        "AutoadvancePages": {
            "description": "Enables autoadvance on pages. This requires `Autoadvance` to be anbled as well",
            "type": "boolean",
            "x-tags": [
                "Schemas"
            ]
        },
        "AvailableLanguages": {
            "description": "The languages the survey supports.",
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "maxItems": 0,
                "items": {
                    "type": "string"
                }
            },
            "maxProperties": 100,
            "minProperties": 1,
            "x-examples": {
                "example": {
                    "EN": [],
                    "ES": []
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "BackButton": {
            "description": "If true, display the back button",
            "default": false,
            "type": "boolean",
            "x-tags": [
                "Schemas"
            ]
        },
        "BallotBoxStuffingPrevention": {
            "description": "If true, prevent respondents from taking the survey multiple times.",
            "type": "boolean",
            "default": false,
            "x-tags": [
                "Schemas"
            ]
        },
        "BallotBoxStuffingPreventionBehavior": {
            "type": "string",
            "default": "default",
            "enum": [
                "default",
                "DefaultMessage",
                "DisplayMessage",
                "Redirect",
                "Continue"
            ],
            "x-tags": [
                "Schemas"
            ],
            "description": "Ballot box stuffing prevention behavior.",
            "nullable": true
        },
        "BallotBoxStuffingPreventionMessage": {
            "description": "ID of the library message shown to prevent ballot box stuffing. See `BallotBoxStuffingPrevention` and `BallotBoxStuffingPreventionMessageLibrary`.",
            "type": "string",
            "nullable": true,
            "pattern": "^(MS_[a-zA-Z0-9]{11,15})?$",
            "example": "MS_abcdefg12345",
            "x-tags": [
                "Schemas"
            ]
        },
        "BallotBoxStuffingPreventionMessageLibrary": {
            "description": "Library ID associated with the Message ID in `BallotBoxStuffingPreventionMessage`.",
            "type": "string",
            "pattern": "^(UR|GR)_[a-zA-Z0-9]{11,15}$",
            "example": "UR_SomeUserId001",
            "x-tags": [
                "Schemas"
            ]
        },
        "BallotBoxStuffingPreventionURL": {
            "type": "string",
            "x-tags": [
                "Schemas"
            ],
            "description": "Ballot Box stuffing prevention URL."
        },
        "CollectGeoLocation": {
            "description": "Collect respondents Geo Location. Default `false`.",
            "type": "string",
            "default": "true",
            "enum": [
                "true",
                "false"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "CustomStyles": {
            "description": "Custom CSS to load when survey taking. See also `ExternalCSS`.",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "CustomLanguages": {
            "description": "The custom languages the survey supports.",
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "required": [
                    "DisplayName",
                    "ErrorMessages"
                ],
                "properties": {
                    "DisplayName": {
                        "description": "Name of the custom language",
                        "type": "string"
                    },
                    "ErrorMessages": {
                        "description": "Base language for the custom language",
                        "type": "string"
                    }
                }
            },
            "x-examples": {
                "example": {
                    "FR-CA": {
                        "DisplayName": "French-Canada",
                        "ErrorMessages": "FR"
                    }
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "EmailThankYou": {
            "description": "Send an email thank you message after survey completion",
            "type": "string",
            "default": "false",
            "enum": [
                "true",
                "false"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "EOSMessage": {
            "title": "End of Survey Message",
            "description": "ID of the message to be displayed at the end of the survey",
            "type": "string",
            "nullable": true,
            "pattern": "^(MS_[a-zA-Z0-9]{11,15})?$",
            "example": "MS_abcdefg12345",
            "x-tags": [
                "Schemas"
            ]
        },
        "EOSRedirectURL": {
            "description": "The URL to redirect respondents to at the end of the survey used when `SurveyTermination` is set to `Redirect`.",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "ExternalCSS": {
            "description": "CSS URL to load when survey taking. See also `CustomStyles`.",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "headerMid": {
            "description": "ID of the library message to display in the header. Do not use in conjunction with `Header`.",
            "type": "string",
            "nullable": true,
            "pattern": "^(MS_[a-zA-Z0-9]{11,15})?$",
            "example": "MS_abcdefg12345",
            "x-tags": [
                "Schemas"
            ]
        },
        "Header": {
            "description": "Header to display on each page such as a logo. Do not use in conjunction with `headerMid`.",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "footerMid": {
            "description": "ID of the library message to display in the footer. Do not use in conjunction with `Footer`.",
            "type": "string",
            "nullable": true,
            "pattern": "^(MS_[a-zA-Z0-9]{11,15})?$",
            "example": "MS_abcdefg12345",
            "x-tags": [
                "Schemas"
            ]
        },
        "Footer": {
            "description": "Footer to display on each page such as a logo. Do not use in conjunction with `footerMid`.",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "InactiveSurvey": {
            "description": "Whether or not to use a custom validation message. See `InactiveMessage` and `InactiveMessageLibrary`.",
            "type": "string",
            "nullable": true,
            "enum": [
                "DefaultMessage",
                "DisplayMessage"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "InactiveMessage": {
            "description": "ID of the library message to use when `InactiveSurvey` is set to `DisplayMessage`. See `InactiveSurvey` and `InactiveMessageLibrary`.",
            "type": "string",
            "nullable": true,
            "pattern": "^(MS_[a-zA-Z0-9]{11,15})?$",
            "example": "MS_abcdefg12345",
            "x-tags": [
                "Schemas"
            ]
        },
        "InactiveMessageLibrary": {
            "description": "Library ID associated with the Message ID in `InactiveMessage`.",
            "type": "string",
            "pattern": "^(UR|GR)_[a-zA-Z0-9]{11,15}$",
            "example": "UR_SomeUserId001",
            "x-tags": [
                "Schemas"
            ]
        },
        "NoIndex": {
            "description": "Prevent search engines from indexing the survey.",
            "type": "string",
            "default": "Yes",
            "enum": [
                "Yes",
                "No"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "nextButtonMid": {
            "description": "ID of the library message to display in the \"next\" button. Do not use in conjunction with `NextButton`.",
            "type": "string",
            "nullable": true,
            "pattern": "^(MS_[a-zA-Z0-9]{11,15})?$",
            "example": "MS_abcdefg12345",
            "x-tags": [
                "Schemas"
            ]
        },
        "NextButton": {
            "description": "The text to use as the \"next\" Button. Note that `BackButton` should be enabled for this property to be used. See `nextButtonMid` and `BackButton`.",
            "default": " ← ",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "PageTransition": {
            "description": "Transition between page navigation.",
            "type": "string",
            "default": "None",
            "enum": [
                "None",
                "Slide",
                "Fade",
                "Flip",
                "Barrel"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "PartialData": {
            "description": "Specify how long a respondent can leave a survey unfinished before that survey automatically closes. A value of `No` specifies to delete partial completion data. See also `PartialDataCloseAfter`.",
            "type": "string",
            "default": "+1 week",
            "enum": [
                "No",
                "+1 hour",
                "+4 hour",
                "+1 day",
                "+2 days",
                "+3 days",
                "+1 week",
                "+2 weeks",
                "+1 month",
                "+3 months",
                "+6 months",
                "+1 year"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "PartialDataCloseAfter": {
            "description": "When the partial data deadline starts, either by LastActivity or SurveyStart. See `PartialData`.",
            "type": "string",
            "enum": [
                "",
                "LastActivity",
                "SurveyStart"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "Password": {
            "description": "The password to take the survey. See `PasswordProtection`.",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "PasswordProtection": {
            "description": "Require a password to take the survey. See `Password`.",
            "default": "No",
            "type": "string",
            "nullable": true,
            "enum": [
                "No",
                "Yes"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "previousButtonMid": {
            "description": "ID of the library message to display in the \"previous\" button. Do not use in conjunction with `PreviousButton`.",
            "type": "string",
            "nullable": true,
            "pattern": "^(MS_[a-zA-Z0-9]{11,15})?$",
            "example": "MS_abcdefg12345",
            "x-tags": [
                "Schemas"
            ]
        },
        "PreviousButton": {
            "description": "The text to use as the \"previous\" Button. Note that `BackButton` should be enabled for this property to be used. See `previousButtonMid` and `BackButton`.",
            "default": " ← ",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "ProgressBarDisplay": {
            "description": "Shows participants a progress bar.",
            "type": "string",
            "default": "None",
            "enum": [
                "None",
                "Text",
                "NoText",
                "VerboseText"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "QuestionsPerPage": {
            "description": "Number of questions to display per page.",
            "type": "string",
            "pattern": "^[\\d]+$",
            "x-tags": [
                "Schemas"
            ]
        },
        "RecaptchaV3": {
            "description": "Apply bot detection on the survey taking experience.",
            "type": "string",
            "enum": [
                "true",
                "false"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "RefererCheck": {
            "description": "Whether or not to restrict the URL respondents must come from to access the survey. See `RefererURL`.",
            "type": "string",
            "default": "No",
            "enum": [
                "No",
                "Yes"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "RefererURL": {
            "description": "The URL respondents must come from to access the survey. See `RefererCheck`.",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "ResponseSummary": {
            "description": "Shows the response summary at the end of the survey used when `SurveyTermination` is set to `ResponseSummary`.",
            "type": "string",
            "default": "No",
            "enum": [
                "Yes",
                "No"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "SaveAndContinue": {
            "description": "If true, allow respondents to save and continue later.",
            "default": true,
            "type": "boolean",
            "x-tags": [
                "Schemas"
            ]
        },
        "SecureResponseFiles": {
            "description": "If true, uploaded files by respondents can only be viewed by the survey owner.",
            "type": "string",
            "default": "true",
            "enum": [
                "true",
                "false"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "Skin": {
            "description": "The skin definition.",
            "type": "object",
            "additionalProperties": true,
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "brandingId": {
                    "type": "string",
                    "description": "A unique identifier for the brand.",
                    "nullable": true
                },
                "templateId": {
                    "description": "The unique identifier for this template.",
                    "type": "string",
                    "nullable": true
                },
                "overrides": {
                    "description": "The overrides property.",
                    "type": "object",
                    "additionalProperties": true,
                    "nullable": true
                }
            }
        },
        "SurveyExpiration": {
            "description": "Sets the survey to be available during a specified time period. See `SurveyStartDate` and `SurveyExpirationDate`.",
            "type": "string",
            "nullable": true,
            "default": null,
            "enum": [
                "on",
                "DateRange",
                "None"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyExpirationDate": {
            "description": "When respondents can no longer take the survey.",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyMetaDescription": {
            "description": "Meta description for the survey, used by search engines and so forth.",
            "type": "string",
            "maxLength": 100,
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyLanguage": {
            "$ref": "#/definitions/LanguageCode"
        },
        "LanguageCode": {
            "type": "string",
            "enum": [
                "AR",
                "ASM",
                "AZ-AZ",
                "BEL",
                "BG",
                "BN",
                "BS",
                "CA",
                "CEB",
                "CH",
                "CS",
                "CY",
                "DA",
                "DE",
                "EL",
                "EN_GB",
                "EN-US",
                "EN",
                "EO",
                "ES-ES",
                "ES",
                "ET",
                "FA",
                "FI",
                "FR-CA",
                "FR",
                "GU",
                "HE",
                "HE-ZA",
                "HI",
                "HIL",
                "HR",
                "HU",
                "HYE",
                "ID",
                "ISL",
                "IT",
                "JA",
                "KAN",
                "KAT",
                "KAZ",
                "KM",
                "KO",
                "LT",
                "LV",
                "MAL",
                "MAR",
                "MK",
                "MN",
                "MS",
                "MY",
                "NL",
                "NO",
                "ORI",
                "PA-IN",
                "PL",
                "PT-BR",
                "PT",
                "RO",
                "RU",
                "SIN",
                "SK",
                "SL",
                "SQI",
                "SR-ME",
                "SR",
                "SV",
                "SW",
                "TA",
                "TEL",
                "TGL",
                "TH",
                "TR",
                "UK",
                "UR",
                "VI",
                "ZH-S",
                "ZH-T"
            ],
            "description": "The default language of the survey.",
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyName": {
            "description": "Name of the survey",
            "type": "string",
            "maxLength": 100,
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyProtection": {
            "description": "Survey is either publicly available or restricted by invitation only",
            "type": "string",
            "default": "PublicSurvey",
            "enum": [
                "PublicSurvey",
                "ByInvitation",
                "PasswordProtected"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyStartDate": {
            "description": "When respondents can start taking the survey",
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyTermination": {
            "description": "End of survey action such as showing respondents a response summary. See `EOSMessageLibrary`, `EOSMessage`, `ResponseSummary`, and `EOSRedirectURL`.",
            "type": "string",
            "nullable": true,
            "default": "DefaultMessage",
            "enum": [
                "DefaultMessage",
                "DisplayMessage",
                "DisplayResult",
                "ResponseSummary",
                "Redirect"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyTitle": {
            "description": "Title of the survey, displayed to users on the browser window/tab.",
            "type": "string",
            "maxLength": 100,
            "x-tags": [
                "Schemas"
            ]
        },
        "ThankYouEmailMessage": {
            "description": "ID of the library message to use for the thank you email. See `EmailThankYou` and `ThankYouEmailMessage`.",
            "type": "string",
            "nullable": true,
            "pattern": "^(MS_[a-zA-Z0-9]{11,15})?$",
            "example": "MS_abcdefg12345",
            "x-tags": [
                "Schemas"
            ]
        },
        "ThankYouEmailMessageLibrary": {
            "description": "Library ID associated with the Message ID in `ThankYouEmailMessage`.",
            "type": "string",
            "pattern": "^(UR|GR)_[a-zA-Z0-9]{11,15}$",
            "example": "UR_SomeUserId001",
            "x-tags": [
                "Schemas"
            ]
        },
        "ValidateMessage": {
            "description": "Whether or not to use a custom validation message. See `ValidationMessage` and `ValidationMessageLibrary`.",
            "type": "string",
            "default": "false",
            "enum": [
                "true",
                "false"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "ValidationMessage": {
            "description": "ID of the library message to use for the custom validation message. See `ValidateMessage` and `ValidationMessageLibrary`.",
            "type": "string",
            "nullable": true,
            "pattern": "^(MS_[a-zA-Z0-9]{11,15})?$",
            "example": "MS_abcdefg12345",
            "x-tags": [
                "Schemas"
            ]
        },
        "ValidationMessageLibrary": {
            "description": "Library ID associated with the Message ID in `ValidationMessage`.",
            "type": "string",
            "pattern": "^(UR|GR)_[a-zA-Z0-9]{11,15}$",
            "example": "UR_SomeUserId001",
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyID": {
            "title": "Survey Id",
            "type": "string",
            "pattern": "^SV_[a-zA-Z0-9]{11,15}$",
            "description": "The [unique identifier](https://api.qualtrics.com/ZG9jOjg3NjYzNQ-finding-your-qualtrics-i-ds) for this survey.",
            "x-tags": [
                "Schemas"
            ]
        },
        "SurveyStatus": {
            "title": "Survey status",
            "description": "The distribution status of the survey, or a flag indicating that it's a library block",
            "type": "string",
            "enum": [
                "Inactive",
                "Active",
                "Pending",
                "LibBlock",
                "Deactive",
                "Temporary"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "UserID": {
            "title": "User Id",
            "type": "string",
            "pattern": "^UR_[a-zA-Z0-9]{11,15}$",
            "description": "The unique identifier for a specific user.",
            "x-tags": [
                "Schemas"
            ]
        },
        "DivisionID": {
            "title": "Division Id",
            "type": "string",
            "pattern": "^DV_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the Division ID."
        },
        "QuestionDefinition": {
            "title": "Question definition",
            "anyOf": [
                {
                    "title": "Multiple Choice question definition",
                    "additionalProperties": true,
                    "properties": {
                        "ChoiceOrder": {
                            "$ref": "#/definitions/ChoiceOrder"
                        },
                        "Choices": {
                            "$ref": "#/definitions/QuestionChoices"
                        },
                        "Configuration": {
                            "$ref": "#/definitions/QuestionConfiguration"
                        },
                        "DataExportTag": {
                            "$ref": "#/definitions/DataExportTag"
                        },
                        "Language": {
                            "$ref": "#/definitions/Language"
                        },
                        "NextAnswerId": {
                            "type": "integer"
                        },
                        "NextChoiceId": {
                            "type": "integer"
                        },
                        "QuestionDescription": {
                            "type": "string",
                            "description": "Label to identify the question"
                        },
                        "QuestionID": {
                            "$ref": "#/definitions/QuestionID"
                        },
                        "QuestionText": {
                            "$ref": "#/definitions/QuestionText"
                        },
                        "QuestionType": {
                            "type": "string",
                            "enum": [
                                "MC"
                            ]
                        },
                        "Randomization": {
                            "$ref": "#/definitions/Randomization"
                        },
                        "RecodeValues": {
                            "$ref": "#/definitions/RecodeValues"
                        },
                        "Selector": {
                            "type": "string",
                            "enum": [
                                "DL",
                                "GRB",
                                "MACOL",
                                "MAHR",
                                "MAVR",
                                "MSB",
                                "NPS",
                                "SACOL",
                                "SAHR",
                                "SAVR",
                                "SB",
                                "TB",
                                "TXOT",
                                "PTB"
                            ],
                            "description": "How answers are selected such as single answer, multiple answer, etc. One of `DL`, `GRB`, `MACOL`, `MAHR`, `MAVR`, `MSB`, `NPS`, `SACOL`, `SAHR`, `SAVR`, `SB`, `TB`, `TXOT`, `PTB`"
                        },
                        "SubSelector": {
                            "type": "string",
                            "enum": [
                                "GR",
                                "TX",
                                "TXOT",
                                "WOTXB",
                                "WTXB"
                            ]
                        },
                        "Validation": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "required": [
                        "ChoiceOrder",
                        "Choices",
                        "Configuration",
                        "Language",
                        "QuestionDescription",
                        "QuestionText",
                        "QuestionType",
                        "Selector",
                        "SubSelector",
                        "Validation"
                    ]
                },
                {
                    "title": "Matrix question definition",
                    "additionalProperties": true,
                    "properties": {
                        "AnswerOrder": {
                            "$ref": "#/definitions/ChoiceOrder"
                        },
                        "Answers": {
                            "$ref": "#/definitions/QuestionChoices"
                        },
                        "AnswerRandomization": {
                            "$ref": "#/definitions/AnswerRandomization"
                        },
                        "ChoiceDataExportTags": {
                            "type": "boolean"
                        },
                        "ChoiceOrder": {
                            "$ref": "#/definitions/ChoiceOrder"
                        },
                        "Choices": {
                            "$ref": "#/definitions/QuestionChoices"
                        },
                        "Configuration": {
                            "$ref": "#/definitions/QuestionConfiguration"
                        },
                        "DataExportTag": {
                            "$ref": "#/definitions/DataExportTag"
                        },
                        "DefaultChoices": {
                            "type": "boolean"
                        },
                        "Language": {
                            "$ref": "#/definitions/Language"
                        },
                        "NextAnswerId": {
                            "type": "integer"
                        },
                        "NextChoiceId": {
                            "type": "integer"
                        },
                        "QuestionDescription": {
                            "type": "string",
                            "maxLength": 100
                        },
                        "QuestionID": {
                            "$ref": "#/definitions/QuestionID"
                        },
                        "QuestionText": {
                            "$ref": "#/definitions/QuestionText"
                        },
                        "QuestionType": {
                            "type": "string",
                            "enum": [
                                "Matrix"
                            ]
                        },
                        "Randomization": {
                            "$ref": "#/definitions/Randomization"
                        },
                        "RecodeValues": {
                            "$ref": "#/definitions/RecodeValues"
                        },
                        "Selector": {
                            "type": "string",
                            "enum": [
                                "Bipolar",
                                "Likert",
                                "TE",
                                "Profile",
                                "CS",
                                "RO",
                                "MaxDiff"
                            ]
                        },
                        "SubSelector": {
                            "type": "string",
                            "enum": [
                                "DL",
                                "DND",
                                "Long",
                                "Medium",
                                "MultipleAnswer",
                                "Short",
                                "SingleAnswer",
                                "WOTB",
                                "WTB",
                                "WVTB",
                                "WTXB",
                                "Essay"
                            ]
                        },
                        "Validation": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "required": [
                        "AnswerOrder",
                        "Answers",
                        "ChoiceDataExportTags",
                        "ChoiceOrder",
                        "Choices",
                        "Configuration",
                        "DataExportTag",
                        "DefaultChoices",
                        "Language",
                        "QuestionDescription",
                        "QuestionText",
                        "QuestionType",
                        "Selector",
                        "SubSelector",
                        "Validation"
                    ]
                },
                {
                    "title": "Text Entry question definition",
                    "additionalProperties": true,
                    "properties": {
                        "Configuration": {
                            "$ref": "#/definitions/QuestionConfiguration"
                        },
                        "DataExportTag": {
                            "$ref": "#/definitions/DataExportTag"
                        },
                        "DefaultChoices": {
                            "type": "boolean"
                        },
                        "Language": {
                            "$ref": "#/definitions/Language"
                        },
                        "NextAnswerId": {
                            "type": "integer"
                        },
                        "NextChoiceId": {
                            "type": "integer"
                        },
                        "QuestionDescription": {
                            "type": "string",
                            "maxLength": 100
                        },
                        "QuestionID": {
                            "$ref": "#/definitions/QuestionID"
                        },
                        "QuestionText": {
                            "$ref": "#/definitions/QuestionText"
                        },
                        "QuestionType": {
                            "$ref": "#/definitions/QuestionType"
                        },
                        "Selector": {
                            "title": "Single Line, Multi Line, Essay Text Box, Form, Password",
                            "type": "string",
                            "enum": [
                                "SL",
                                "ML",
                                "ESTB",
                                "FORM",
                                "PW"
                            ]
                        },
                        "Validation": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "required": [
                        "Configuration",
                        "DataExportTag",
                        "DefaultChoices",
                        "Language",
                        "QuestionDescription",
                        "QuestionText",
                        "QuestionType",
                        "Selector",
                        "Validation"
                    ]
                },
                {
                    "title": "Slider question definition",
                    "additionalProperties": true,
                    "properties": {
                        "ChoiceOrder": {
                            "$ref": "#/definitions/ChoiceOrder"
                        },
                        "Choices": {
                            "$ref": "#/definitions/QuestionChoices"
                        },
                        "Configuration": {
                            "$ref": "#/definitions/QuestionConfiguration"
                        },
                        "DataExportTag": {
                            "$ref": "#/definitions/DataExportTag"
                        },
                        "Labels": {
                            "$ref": "#/definitions/Selection"
                        },
                        "Language": {
                            "$ref": "#/definitions/Language"
                        },
                        "NextAnswerId": {
                            "type": "integer"
                        },
                        "NextChoiceId": {
                            "type": "integer"
                        },
                        "QuestionDescription": {
                            "type": "string",
                            "maxLength": 100
                        },
                        "QuestionID": {
                            "$ref": "#/definitions/QuestionID"
                        },
                        "QuestionText": {
                            "$ref": "#/definitions/QuestionText"
                        },
                        "QuestionType": {
                            "type": "string",
                            "enum": [
                                "Slider"
                            ]
                        },
                        "RecodeValues": {
                            "$ref": "#/definitions/RecodeValues"
                        },
                        "Selector": {
                            "title": "Draggable bars, draggable sliders, stars",
                            "type": "string",
                            "enum": [
                                "HBAR",
                                "HSLIDER",
                                "STAR"
                            ]
                        },
                        "SubSelector": {
                            "$ref": "#/definitions/QuestionSubSelector"
                        },
                        "Validation": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "required": [
                        "ChoiceOrder",
                        "Choices",
                        "Configuration",
                        "DataExportTag",
                        "Labels",
                        "Language",
                        "NextAnswerId",
                        "NextChoiceId",
                        "QuestionDescription",
                        "QuestionText",
                        "QuestionType",
                        "Selector",
                        "SubSelector",
                        "Validation"
                    ]
                },
                {
                    "title": "Descriptive Text question definition",
                    "additionalProperties": true,
                    "properties": {
                        "Configuration": {
                            "$ref": "#/definitions/QuestionConfiguration"
                        },
                        "DataExportTag": {
                            "$ref": "#/definitions/DataExportTag"
                        },
                        "DefaultChoices": {
                            "type": "boolean"
                        },
                        "Language": {
                            "$ref": "#/definitions/Language"
                        },
                        "NextAnswerId": {
                            "type": "integer"
                        },
                        "NextChoiceId": {
                            "type": "integer"
                        },
                        "QuestionDescription": {
                            "type": "string",
                            "maxLength": 100
                        },
                        "QuestionID": {
                            "$ref": "#/definitions/QuestionID"
                        },
                        "QuestionText": {
                            "$ref": "#/definitions/QuestionText"
                        },
                        "QuestionType": {
                            "type": "string",
                            "enum": [
                                "DB"
                            ]
                        },
                        "Selector": {
                            "type": "string",
                            "enum": [
                                "TB"
                            ]
                        },
                        "Validation": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "required": [
                        "Configuration",
                        "DataExportTag",
                        "DefaultChoices",
                        "Language",
                        "QuestionDescription",
                        "QuestionText",
                        "QuestionType",
                        "Selector",
                        "Validation"
                    ]
                },
                {
                    "title": "Graphic question definition",
                    "additionalProperties": true,
                    "properties": {
                        "Configuration": {
                            "$ref": "#/definitions/QuestionConfiguration"
                        },
                        "DataExportTag": {
                            "$ref": "#/definitions/DataExportTag"
                        },
                        "DefaultChoices": {
                            "type": "boolean"
                        },
                        "Graphics": {
                            "$ref": "#/definitions/ImageID"
                        },
                        "GraphicsDescription": {
                            "type": "string",
                            "maxLength": 100
                        },
                        "Language": {
                            "$ref": "#/definitions/Language"
                        },
                        "NextAnswerId": {
                            "type": "integer"
                        },
                        "NextChoiceId": {
                            "type": "integer"
                        },
                        "QuestionDescription": {
                            "type": "string",
                            "maxLength": 100
                        },
                        "QuestionID": {
                            "$ref": "#/definitions/QuestionID"
                        },
                        "QuestionText": {
                            "$ref": "#/definitions/QuestionText"
                        },
                        "QuestionType": {
                            "type": "string",
                            "enum": [
                                "DB"
                            ]
                        },
                        "Selector": {
                            "type": "string",
                            "enum": [
                                "GRB"
                            ]
                        },
                        "Validation": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "required": [
                        "Configuration",
                        "DataExportTag",
                        "DefaultChoices",
                        "Graphics",
                        "GraphicsDescription",
                        "Language",
                        "QuestionDescription",
                        "QuestionText",
                        "QuestionType",
                        "Selector",
                        "Validation"
                    ]
                }
            ],
            "x-examples": {
                "Multiple Choice": {
                    "QuestionText": "What is your favorite color?",
                    "DataExportTag": "Q1",
                    "QuestionType": "MC",
                    "Selector": "SAVR",
                    "SubSelector": "TX",
                    "Configuration": {
                        "QuestionDescriptionOption": "UseText"
                    },
                    "QuestionDescription": "What is your favorite color?",
                    "Choices": {
                        "1": {
                            "Display": "Choice created using Survey API!"
                        },
                        "2": {
                            "Display": "green"
                        },
                        "3": {
                            "Display": "blue"
                        }
                    },
                    "ChoiceOrder": [
                        "1",
                        "2",
                        "3"
                    ],
                    "Validation": {
                        "Settings": {
                            "ForceResponse": "OFF",
                            "ForceResponseType": "ON",
                            "Type": "None"
                        }
                    },
                    "Language": [],
                    "QuestionID": "QID1"
                },
                "Graphic": {
                    "QuestionText": "Click to write the question text",
                    "DefaultChoices": false,
                    "DataExportTag": "Q6",
                    "QuestionType": "DB",
                    "Selector": "GRB",
                    "Configuration": {
                        "QuestionDescriptionOption": "UseText"
                    },
                    "QuestionDescription": "Click to write the question text",
                    "Validation": {
                        "Settings": {
                            "Type": "None"
                        }
                    },
                    "Language": [],
                    "NextChoiceId": 4,
                    "NextAnswerId": 1,
                    "QuestionID": "QID6"
                },
                "Text Entry": {
                    "QuestionText": "Click to write the question text",
                    "DefaultChoices": false,
                    "DataExportTag": "Q3",
                    "QuestionType": "TE",
                    "Selector": "SL",
                    "Configuration": {
                        "QuestionDescriptionOption": "UseText",
                        "AllowFreeResponse": "false"
                    },
                    "QuestionDescription": "Click to write the question text",
                    "Validation": {
                        "Settings": {
                            "ForceResponse": "OFF",
                            "ForceResponseType": "ON",
                            "Type": "None"
                        }
                    },
                    "Language": [],
                    "NextChoiceId": 4,
                    "NextAnswerId": 1,
                    "QuestionID": "QID3"
                },
                "Descriptive Text": {
                    "QuestionText": "Click to write the question text",
                    "DefaultChoices": false,
                    "DataExportTag": "Q5",
                    "QuestionType": "DB",
                    "Selector": "TB",
                    "Configuration": {
                        "QuestionDescriptionOption": "UseText"
                    },
                    "QuestionDescription": "Click to write the question text",
                    "Validation": {
                        "Settings": {
                            "Type": "None"
                        }
                    },
                    "Language": [],
                    "NextChoiceId": 4,
                    "NextAnswerId": 1,
                    "QuestionID": "QID5"
                },
                "Slider": {
                    "QuestionText": "Click to write the question text",
                    "DefaultChoices": false,
                    "DataExportTag": "Q4",
                    "QuestionType": "Slider",
                    "Selector": "HSLIDER",
                    "Configuration": {
                        "QuestionDescriptionOption": "UseText",
                        "CSSliderMin": 0,
                        "CSSliderMax": 100,
                        "GridLines": 10,
                        "SnapToGrid": false,
                        "NumDecimals": "0",
                        "ShowValue": true,
                        "CustomStart": false,
                        "NotApplicable": false,
                        "MobileFirst": true
                    },
                    "QuestionDescription": "Click to write the question text",
                    "Choices": {
                        "1": {
                            "Display": "Click to write Choice 1"
                        },
                        "2": {
                            "Display": "Click to write Choice 2"
                        },
                        "3": {
                            "Display": "Click to write Choice 3"
                        }
                    },
                    "ChoiceOrder": [
                        "1",
                        "2",
                        "3"
                    ],
                    "Validation": {
                        "Settings": {
                            "ForceResponse": "OFF",
                            "ForceResponseType": "ON",
                            "Type": "None"
                        }
                    },
                    "Language": [],
                    "NextChoiceId": 4,
                    "NextAnswerId": 1,
                    "Labels": [],
                    "QuestionID": "QID4"
                },
                "Matrix": {
                    "QuestionText": "Click to write the question text",
                    "DefaultChoices": false,
                    "DataExportTag": "Q2",
                    "QuestionType": "Matrix",
                    "Selector": "Likert",
                    "SubSelector": "SingleAnswer",
                    "Configuration": {
                        "QuestionDescriptionOption": "UseText",
                        "TextPosition": "inline",
                        "ChoiceColumnWidth": 25,
                        "RepeatHeaders": "none",
                        "WhiteSpace": "OFF",
                        "MobileFirst": true
                    },
                    "QuestionDescription": "Click to write the question text",
                    "Choices": {
                        "1": {
                            "Display": "Click to write Statement 1"
                        },
                        "2": {
                            "Display": "Click to write Statement 2"
                        },
                        "3": {
                            "Display": "Click to write Statement 3"
                        }
                    },
                    "ChoiceOrder": [
                        "1",
                        "2",
                        "3"
                    ],
                    "Validation": {
                        "Settings": {
                            "ForceResponse": "OFF",
                            "ForceResponseType": "ON",
                            "Type": "None"
                        }
                    },
                    "GradingData": [],
                    "Language": [],
                    "NextChoiceId": 4,
                    "NextAnswerId": 4,
                    "Answers": {
                        "1": {
                            "Display": "Click to write Scale point 1"
                        },
                        "2": {
                            "Display": "Click to write Scale point 2"
                        },
                        "3": {
                            "Display": "Click to write Scale point 3"
                        }
                    },
                    "AnswerOrder": [
                        "1",
                        "2",
                        "3"
                    ],
                    "ChoiceDataExportTags": false,
                    "QuestionID": "QID2"
                }
            },
            "type": "object",
            "x-tags": [
                "Schemas"
            ]
        },
        "ChoiceOrder": {
            "description": "The order the choices are to be displayed in.",
            "type": "array",
            "example": [
                "1",
                "2"
            ],
            "x-tags": [
                "Schemas"
            ],
            "items": {
                "type": "string",
                "pattern": "^[\\d]+$"
            }
        },
        "QuestionChoices": {
            "description": "Selections for a question",
            "type": "object",
            "example": {
                "1": {
                    "Display": "choice 1"
                },
                "2": {
                    "Display": "choice 2"
                }
            },
            "additionalProperties": {
                "type": "object",
                "additionalProperties": true,
                "properties": {
                    "Display": {
                        "type": "string"
                    }
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "QuestionConfiguration": {
            "description": "Configurations for how the question should be displayed",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "QuestionDescriptionOption": "UseText",
                    "CSSliderMin": 0,
                    "CSSliderMax": 100,
                    "GridLines": 10,
                    "SnapToGrid": false,
                    "NumDecimals": "0",
                    "ShowValue": true,
                    "CustomStart": false,
                    "NotApplicable": false,
                    "MobileFirst": true
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "QuestionDescriptionOption": {
                    "type": "string",
                    "enum": [
                        "UseText",
                        "SpecifyLabel"
                    ],
                    "description": "An optional user-provided field for question descriptions."
                },
                "TextPosition": {
                    "type": "string",
                    "enum": [
                        "inline"
                    ],
                    "description": "Text position."
                },
                "ChoiceColumnWidth": {
                    "type": "integer",
                    "enum": [
                        25
                    ],
                    "description": "Value of column width."
                },
                "RepeatHeaders": {
                    "type": "string",
                    "enum": [
                        "none"
                    ],
                    "description": "Repeating of headers."
                },
                "WhiteSpace": {
                    "type": "string",
                    "enum": [
                        "ON",
                        "OFF"
                    ],
                    "description": "If white space is allowed."
                },
                "LabelPosition": {
                    "type": "string",
                    "enum": [
                        "BELOW",
                        "SIDE"
                    ],
                    "description": "Position of label."
                },
                "NumColumns": {
                    "type": "integer",
                    "description": "Number of columns."
                },
                "MobileFirst": {
                    "type": "boolean",
                    "description": "If questions should be formatted for use on a mobile device."
                }
            }
        },
        "DataExportTag": {
            "description": "The tag to identify the question in exported data.",
            "type": "string",
            "x-tags": [
                "Schemas"
            ]
        },
        "Language": {
            "description": "Question translations",
            "oneOf": [
                {
                    "type": "array",
                    "maxItems": 0,
                    "description": "Translations of questions.",
                    "items": {
                        "type": "string"
                    }
                },
                {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                            "QuestionText": {
                                "type": "string"
                            },
                            "Choices": {
                                "$ref": "#/definitions/QuestionChoices"
                            }
                        }
                    }
                }
            ],
            "x-examples": {
                "example": {
                    "ES-ES": {
                        "Choices": {
                            "1": {
                                "Display": "Prueba 1"
                            },
                            "2": {
                                "Display": "Prueba 2"
                            },
                            "3": {
                                "Display": "Prueba 3"
                            }
                        },
                        "QuestionText": "Pregunta"
                    }
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "QuestionID": {
            "description": "The unique identifier for the question.",
            "title": "Question Id",
            "type": "string",
            "pattern": "^QID[a-zA-Z0-9]+$",
            "x-tags": [
                "Schemas"
            ]
        },
        "QuestionText": {
            "type": "string",
            "minLength": 0,
            "maxLength": 1000,
            "description": "Text for the question.",
            "x-tags": [
                "Schemas"
            ]
        },
        "Randomization": {
            "description": "Randomize choices within a question.",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object"
                }
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "RecodeValues": {
            "description": "Numeric mapping of question choices.",
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "example": {
                "1": "1",
                "2": "2",
                "3": "-1000"
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "Validation": {
            "description": "Force respondents to answer a question or request that they consider answering the question before leaving the page",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "Settings": {
                        "CustomValidation": {
                            "Logic": {
                                "0": {
                                    "0": {
                                        "ChoiceLocator": "q://QID9/SelectableChoice/1",
                                        "Description": "<span class=\"ConjDesc\">If</span> <span class=\"QuestionDesc\">Test Question</span> <span class=\"LeftOpDesc\">Test 1</span> <span class=\"OpDesc\">Is Not Selected</span> ",
                                        "LeftOperand": "q://QID9/SelectableChoice/1",
                                        "LogicType": "Question",
                                        "Operator": "NotSelected",
                                        "QuestionID": "QID9",
                                        "QuestionIDFromLocator": "QID9",
                                        "QuestionIsInLoop": "no",
                                        "Type": "Expression"
                                    },
                                    "Type": "If"
                                },
                                "Type": "BooleanExpression"
                            },
                            "Message": {
                                "description": "Error Text",
                                "libraryID": "UR_3Cz41f8fIqINzaR",
                                "messageID": "MS_elWHOi9OXxXvaSN",
                                "subMessageID": "VE_ERROR"
                            }
                        },
                        "ForceResponse": "RequestResponse",
                        "ForceResponseType": "RequestResponse",
                        "Type": "CustomValidation"
                    }
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "Settings": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "CustomValidation": {
                            "$ref": "#/definitions/CustomValidation"
                        },
                        "ForceResponse": {
                            "type": "string",
                            "description": "The forced response."
                        },
                        "ForceResponseType": {
                            "type": "string",
                            "description": "The type of forced response."
                        },
                        "Type": {
                            "type": "string",
                            "description": "Settings type."
                        }
                    }
                }
            },
            "required": [
                "Settings"
            ]
        },
        "CustomValidation": {
            "description": "Additional validation to direct respondents to answer questions in a certain way.",
            "additionalProperties": true,
            "x-tags": [
                "Schemas"
            ],
            "type": "object",
            "properties": {
                "Logic": {
                    "$ref": "#/definitions/BranchLogic"
                },
                "Message": {
                    "description": "Message to display when respondents don't fulfill the validation",
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                        "libraryID",
                        "messageID",
                        "subMessageID"
                    ],
                    "properties": {
                        "description": {
                            "type": "string",
                            "description": "A user-provided description of the custom validation."
                        },
                        "libraryID": {
                            "$ref": "#/definitions/LibraryID"
                        },
                        "messageID": {
                            "$ref": "#/definitions/MessageID"
                        },
                        "subMessageID": {
                            "type": "string",
                            "enum": [
                                "VE_FORCE_RESPONSE",
                                "VE_FORCE_RESPONSE_PLURAL",
                                "VE_FORCE_RESPONSE_MORE",
                                "VE_FORCE_RESPONSE_OTHER",
                                "VE_MIN_CHOICES",
                                "VE_MAX_CHOICES",
                                "VE_MAX_CHOICES_PGR",
                                "VE_MIN_CHOICES_MATRIX",
                                "VE_MAX_CHOICES_MATRIX",
                                "VE_MIN_CHOICES_HLText",
                                "VE_MAX_CHOICES_HLText",
                                "VE_INCORRECT_TOTAL",
                                "VE_TOO_MANY_CHARACTERS",
                                "VE_TOO_MANY_CHARACTERS_PLURAL",
                                "VE_TOO_FEW_CHARACTERS",
                                "VE_TOO_FEW_CHARACTERS_PLURAL",
                                "VE_NOT_CONSECUTIVE",
                                "VE_NOT_CONSECUTIVE_RANGE",
                                "VE_VALIDATION_FAILED",
                                "VE_VALIDUSSTATE",
                                "VE_VALIDCAPHONE",
                                "VE_VALIDUKPHONE",
                                "VE_VALIDUKZIP",
                                "VE_VALIDAUPHONE",
                                "VE_VALIDNLPHONE",
                                "VE_VALIDNZPHONE",
                                "VE_VALIDAUZIP",
                                "VE_VALIDNZZIP",
                                "VE_VALIDNLZIP",
                                "VE_VALIDUSZIP",
                                "VE_VALIDCAZIP",
                                "VE_VALIDDATE",
                                "VE_VALIDALTDATE",
                                "VE_VALIDINTLDATE",
                                "VE_VALIDNUMBER",
                                "VE_VALIDTEXTONLY",
                                "VE_VALIDUSSTATE_PLURAL",
                                "VE_VALIDEMAIL_PLURAL",
                                "VE_VALIDUSPHONE_PLURAL",
                                "VE_VALIDUSZIP_PLURAL",
                                "VE_VALIDDATE_PLURAL",
                                "VE_VALIDNUMBER_PLURAL",
                                "VE_VALIDTEXTONLY_PLURAL",
                                "VE_VALIDEXTENSIONS",
                                "VE_VALIDPDF",
                                "VE_VALIDDOCUMENT",
                                "VE_VALIDEMAIL",
                                "VE_VALIDSPREADSHEET",
                                "VE_VALIDGRAPHIC",
                                "VE_VALIDUPLOAD",
                                "VE_VALIDSCREENCAPTURE",
                                "VE_TEXT_ENTRY_HAS_VALUE_BUT_NOT_CHECKED",
                                "VE_TEXT_ENTRY_HAS_VALUE_BUT_NOT_RANKED",
                                "VE_SELECT_LEAST_MOST_PREFERRED",
                                "VE_SELECT_LEAST_MOST_LEVEL",
                                "VE_SELECT_MOST_VALUE_UPGRADE",
                                "VE_SELECT_VALUABLE_LEVEL",
                                "VE_IMPORTANCE_TOTAL",
                                "VE_MIN_GROUP_CHOICES",
                                "VE_MAX_GROUP_CHOICES",
                                "VE_VALIDNUMBER_MIN",
                                "VE_VALIDNUMBER_MAX",
                                "VE_VALIDMIN_PLURAL",
                                "VE_VALIDMAX_PLURAL",
                                "VE_VALIDNUMBER_NUM_DECIMALS",
                                "VE_FORCE_OTHER_RESPONSE",
                                "VE_HEADER_VALIDATION_MESSAGE",
                                "VE_CUSTOM_VALIDATION_NO_MESSAGE",
                                "VE_CUSTOM_VALIDATION_NOT_APPLIED",
                                "VE_QUESTION",
                                "VE_ERROR",
                                "VE_INCORRECT_CAPTCHA_RESPONSE",
                                "VE_MULTIPLE_CHOICES"
                            ],
                            "description": "The unique identifier for the `subMessageID`."
                        }
                    }
                }
            },
            "required": [
                "Logic",
                "Message"
            ]
        },
        "BranchLogic": {
            "description": "Send respondents down different paths in the survey. See Qualtics Documentation for more information on [Branch Logic](https://www.qualtrics.com/support/survey-platform/survey-module/survey-flow/standard-elements/branch-logic/)",
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/QuestionExpression"
                    },
                    {
                        "$ref": "#/definitions/EmbeddedDataExpression"
                    },
                    {
                        "$ref": "#/definitions/DeviceTypeExpression"
                    },
                    {
                        "$ref": "#/definitions/QuotaExpression"
                    },
                    {
                        "$ref": "#/definitions/GeoIPExpression"
                    },
                    {
                        "$ref": "#/definitions/EvaluatorMetadataExpression"
                    },
                    {
                        "$ref": "#/definitions/PanelDataExpression"
                    },
                    {
                        "$ref": "#/definitions/LoopAndMergeExpression"
                    },
                    {
                        "$ref": "#/definitions/RelationshipExpression"
                    },
                    {
                        "$ref": "#/definitions/SubjectMetadataExpression"
                    },
                    {
                        "$ref": "#/definitions/OrgHierarchyUnitsExpression"
                    },
                    {
                        "$ref": "#/definitions/OrgHierarchyMetadataExpression"
                    }
                ]
            },
            "x-examples": {
                "example": {
                    "0": {
                        "0": {
                            "ChoiceLocator": "q://QID2/SelectableChoice/2",
                            "Description": "<span class=\"ConjDesc\">If</span> <span class=\"QuestionDesc\">Welcome Stranger</span> <span class=\"LeftOpDesc\">What are you buying?</span> <span class=\"OpDesc\">Is Selected</span> ",
                            "LeftOperand": "q://QID2/SelectableChoice/2",
                            "LogicType": "Question",
                            "Operator": "Selected",
                            "QuestionID": "QID2",
                            "QuestionIDFromLocator": "QID2",
                            "QuestionIsInLoop": "no",
                            "Type": "Expression"
                        },
                        "Type": "If"
                    },
                    "Type": "BooleanExpression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "BooleanExpression"
                    ],
                    "description": "Type of branch logic."
                }
            },
            "required": [
                "Type"
            ]
        },
        "QuestionExpression": {
            "description": "Logic expression for a question type.",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "LogicType": "Question",
                    "ChoiceLocator": "q://QID1/SelectableChoice/1",
                    "LeftOperand": "q://QID1/SelectableChoice/1",
                    "Operator": "Selected",
                    "QuestionID": "QID1",
                    "QuestionIDFromLocator": "QID1",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "ChoiceLocator": {
                    "$ref": "#/definitions/Locator"
                },
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "Question"
                    ],
                    "description": "The logic type of a question expression."
                },
                "Operator": {
                    "type": "string",
                    "enum": [
                        "Selected",
                        "NotSelected",
                        "EqualTo",
                        "NotEqualTo",
                        "Empty",
                        "NotEmpty",
                        "Displayed",
                        "NotDisplayed",
                        "GreaterThan",
                        "GreaterThanOrEqual",
                        "LessThan",
                        "LessThanOrEqual",
                        "Contains",
                        "DoesNotContain",
                        "MatchesRegex",
                        "IsNot",
                        "Uploaded",
                        "NotUploaded",
                        "PDF",
                        "Document",
                        "ClickedIn",
                        "NotClickedIn",
                        "Extensions",
                        "Graphic",
                        "Spreadsheet"
                    ],
                    "description": "Operator."
                },
                "QuestionID": {
                    "$ref": "#/definitions/QuestionID"
                },
                "QuestionIsInLoop": {
                    "type": "string",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "If yes, question is in loop."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "The type of question expression."
                }
            },
            "required": [
                "ChoiceLocator",
                "LogicType",
                "Operator",
                "QuestionID",
                "QuestionIsInLoop",
                "Type"
            ]
        },
        "Locator": {
            "anyOf": [
                {
                    "title": "Classic locator, begins with two alpha characters followed by a | and any combination of alpha and | characaters",
                    "pattern": "^(Locator:)?\\w\\w\\|(-|\\w| |\\||#)+$",
                    "description": "An user-provided field."
                }
            ],
            "x-tags": [
                "Schemas"
            ],
            "description": "Locator.",
            "type": "string",
            "x-examples": {
                "example-1": "string"
            }
        },
        "EmbeddedDataExpression": {
            "description": "Logic expression for a Embedded Data type",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "LogicType": "EmbeddedField",
                    "Description": "My ED Expression",
                    "Operator": "EqualTo",
                    "LeftOperand": "e://Field/1",
                    "RightOperand": "SomeValue",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "EmbeddedField"
                    ],
                    "description": "Logic type of the embedded data expression."
                },
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                },
                "Operator": {
                    "$ref": "#/definitions/ComparisonOperators"
                },
                "LeftOperand": {
                    "$ref": "#/definitions/Locator"
                },
                "RightOperand": {
                    "type": "string",
                    "description": "Operation."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "Type of embedded data expression."
                }
            },
            "required": [
                "LogicType",
                "Type"
            ]
        },
        "ComparisonOperators": {
            "type": "string",
            "enum": [
                "EqualTo",
                "NotEqualTo",
                "Empty",
                "NotEmpty",
                "GreaterThan",
                "GreaterThanOrEqual",
                "LessThan",
                "LessThanOrEqual",
                "Contains",
                "DoesNotContain",
                "MatchesRegex",
                "Is",
                "IsNot",
                "In",
                "InOrBelow",
                "SameAsSubject"
            ],
            "x-tags": [
                "Schemas"
            ],
            "description": "Comparison operators."
        },
        "DeviceTypeExpression": {
            "description": "Logic expression for a Device Type",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "LogicType": "DeviceType",
                    "Description": "My DT Expression",
                    "LeftOperand": "mobile",
                    "Operator": "Is",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "DeviceType"
                    ],
                    "description": "Logic type of the device type expression."
                },
                "LeftOperand": {
                    "type": "string",
                    "enum": [
                        "mobile",
                        "Mobile",
                        "blackberry",
                        "android",
                        "ipad",
                        "iphone",
                        "ipod",
                        "opera",
                        "palm",
                        "windows",
                        "generic"
                    ],
                    "description": "Operation."
                },
                "Operator": {
                    "type": "string",
                    "enum": [
                        "Is",
                        "IsNot"
                    ],
                    "description": "Operator."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "The type of device type expression."
                },
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                }
            },
            "required": [
                "LogicType",
                "LeftOperand",
                "Type",
                "Description"
            ]
        },
        "QuotaExpression": {
            "description": "Logic expression for a quota type.",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "LogicType": "Quota",
                    "Description": "My Quota expression",
                    "LeftOperand": "qo://QO_5EWOT1L7FhSGolu/QuotaMet",
                    "Operator": "QuotaMet",
                    "QuotaID": "QO_5EWOT1L7FhSGolu",
                    "QuotaName": "Q1.S1 Quota",
                    "QuotaType": "Simple",
                    "SubQuotaID": "0",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "Quota"
                    ],
                    "description": "The logic type of the quota expression."
                },
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                },
                "LeftOperand": {
                    "type": "string",
                    "pattern": "^qo://QO_[0-9a-zA-Z]{11,15}/Quota(Count|Met|NotMet)$",
                    "description": "Operator."
                },
                "Operator": {
                    "type": "string",
                    "enum": [
                        "QuotaMet",
                        "QuotaNotMet",
                        "GreaterThan",
                        "GreaterThanOrEqual",
                        "LessThan",
                        "LessThanOrEqual",
                        "EqualTo",
                        "NotEqualTo"
                    ],
                    "description": "Operator."
                },
                "QuotaID": {
                    "$ref": "#/definitions/QuotaID"
                },
                "QuotaName": {
                    "type": "string",
                    "description": "The name of the quota."
                },
                "QuotaType": {
                    "type": "string",
                    "enum": [
                        "Simple",
                        "Cross",
                        "NoLogic"
                    ],
                    "description": "The type of quota."
                },
                "SubQuotaID": {
                    "type": "string",
                    "pattern": "^\\d+$",
                    "description": "A unique identifier for the `SubQuotaID`."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "The type of quota expression."
                }
            },
            "required": [
                "LogicType",
                "Description",
                "LeftOperand",
                "QuotaID",
                "QuotaType",
                "Type"
            ]
        },
        "QuotaID": {
            "title": "Quota Id",
            "type": "string",
            "pattern": "^QO_[0-9a-zA-Z]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the quota."
        },
        "GeoIPExpression": {
            "description": "Logic expression for a Geo IP type.",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "LogicType": "GeoIP",
                    "Description": "My Geo IP expression",
                    "LeftOperand": "loc://AreaCode",
                    "Operator": "EqualTo",
                    "RightOperand": "84604",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "GeoIP"
                    ],
                    "description": "The logic type of the Geo IP expression."
                },
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                },
                "LeftOperand": {
                    "type": "string",
                    "enum": [
                        "loc://PostalCode",
                        "loc://City",
                        "loc://Region",
                        "loc://AreaCode",
                        "loc://CountryName",
                        "loc://CountryCode",
                        "LocationMap"
                    ],
                    "description": "Operation."
                },
                "Operator": {
                    "$ref": "#/definitions/ComparisonOperators"
                },
                "RightOperand": {
                    "type": "string",
                    "description": "Operation."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "The type of Geo IP expression."
                }
            },
            "required": [
                "LogicType",
                "Description",
                "Type"
            ]
        },
        "EvaluatorMetadataExpression": {
            "description": "Logic expression for a Evaluator Metadata type",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "LogicType": "EvaluatorMetadata",
                    "Description": "My Evaluator Metadata expression",
                    "LeftOperand": "e://Field/Manager%20Level%202",
                    "Operator": "SameAsSubject",
                    "PersonMeta": "Manager Level 2",
                    "RightOperand": "Some person's name here",
                    "SameAsSubjectRightOperand": "e://Field/Manager",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "EvaluatorMetadata"
                    ],
                    "description": "Logic type of the evaluator metadata expression."
                },
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                },
                "LeftOperand": {
                    "type": "string",
                    "pattern": "^e://Field/.*$",
                    "description": "Operation."
                },
                "Operator": {
                    "$ref": "#/definitions/ComparisonOperators"
                },
                "PersonMeta": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Person meta data."
                },
                "RightOperand": {
                    "type": "string",
                    "description": "Operation."
                },
                "SameAsSubjectRightOperand": {
                    "type": "string",
                    "pattern": "^e://Field/.*$",
                    "description": "Same as subject."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "Type of evaluator metadata expression."
                }
            },
            "required": [
                "LogicType",
                "Description",
                "LeftOperand",
                "PersonMeta",
                "Type"
            ]
        },
        "PanelDataExpression": {
            "description": "Logic expression for a Panel Data type.",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "Description": "<span class=\"ConjDesc\">If</span><span class=\"schema_desc\">Contact List</span><span class=\"select_val_desc LeftOperand_desc\">First Name</span><span class=\"select_val_desc Operator_desc\">Is Equal to</span><span class=\"textbox_val_desc RightOperand_desc\">Bob</span>",
                    "LeftOperand": "m://FirstName",
                    "LogicType": "PanelData",
                    "Operator": "EqualTo",
                    "RightOperand": "Bob",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                },
                "LeftOperand": {
                    "type": "string",
                    "enum": [
                        "m://FirstName",
                        "m://LastName",
                        "m://ContactPoint",
                        "m://ExternalDataReference",
                        "m://Email"
                    ],
                    "description": "Operation."
                },
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "PanelData"
                    ],
                    "description": "The logic type of the Panel data expression."
                },
                "Operator": {
                    "$ref": "#/definitions/ComparisonOperators"
                },
                "RightOperand": {
                    "type": "string",
                    "description": "Operation."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "The type of the Panel data expression."
                }
            },
            "required": [
                "Description",
                "LeftOperand",
                "LogicType",
                "Type"
            ]
        },
        "LoopAndMergeExpression": {
            "description": "Logic expression for a Loop & Merge type.",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "LogicType": "LoopAndMerge",
                    "Description": "My Loop & Merge expression",
                    "LeftOperand": "BL_abcdefg12345",
                    "Operator": "EqualTo",
                    "RightOperand": "lm://CurrentLoop",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "LoopAndMerge"
                    ],
                    "description": "The logic type of the loop and merge expression."
                },
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                },
                "LeftOperand": {
                    "$ref": "#/definitions/BlockID"
                },
                "Operator": {
                    "$ref": "#/definitions/ComparisonOperators"
                },
                "RightOperand": {
                    "type": "string",
                    "enum": [
                        "lm://CurrentLoop",
                        "lm://CurrentLoopNumber",
                        "lm://CurrentLoopById"
                    ],
                    "description": "Operation."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "The type of loop and merge expression."
                }
            },
            "required": [
                "LogicType",
                "Description",
                "Type"
            ]
        },
        "BlockID": {
            "title": "Block Id",
            "type": "string",
            "pattern": "^BL_[a-zA-Z0-9]{11,15}$",
            "description": "The ID of the survey's default block.",
            "x-tags": [
                "Schemas"
            ]
        },
        "RelationshipExpression": {
            "description": "Logic expression for a relationship type.",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "LogicType": "Relationship",
                    "Description": "My Relationship expression",
                    "LeftOperand": "e://Field/Relationship",
                    "Operator": "EqualTo",
                    "RightOperand": "Manager",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field"
                },
                "LeftOperand": {
                    "type": "string",
                    "enum": [
                        "e://Field/Relationship"
                    ],
                    "description": "Operation."
                },
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "Relationship"
                    ],
                    "description": "The logic type of the relationship expression."
                },
                "Operator": {
                    "$ref": "#/definitions/ComparisonOperators"
                },
                "RightOperand": {
                    "type": "string",
                    "description": "Operation."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "The type of relationship expression."
                }
            },
            "required": [
                "Description",
                "LeftOperand",
                "LogicType",
                "Type"
            ]
        },
        "SubjectMetadataExpression": {
            "description": "Logic expression for a Subject Metadata type",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "LogicType": "SubjectMetadata",
                    "Description": "<span class=\"ConjDesc\">And</span> <span class=\"QuestionDesc\"></span> <span class=\"LeftOpDesc\">Subject's Metadata Field+ with pluses</span> Is <span class=\"OpDesc\">Equal to</span> <span class=\"RightOpDesc\"> a plus space and 2 spaces </span>",
                    "LeftOperand": "e://Field/SubjectField%2B%20with%20pluses",
                    "Operator": "EqualTo",
                    "PersonMeta": "Field+ with pluses",
                    "RightOperand": "a plus space and 2 spaces",
                    "Type": "Expression"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "SubjectMetadata"
                    ],
                    "description": "The logic type of the expression."
                },
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                },
                "LeftOperand": {
                    "type": "string",
                    "pattern": "^e://Field/.*$"
                },
                "Operator": {
                    "$ref": "#/definitions/ComparisonOperators"
                },
                "PersonMeta": {
                    "type": "string",
                    "description": "Personal metadata."
                },
                "RightOperand": {
                    "type": "string",
                    "description": "Operation."
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "The type of expression."
                }
            },
            "required": [
                "LogicType",
                "Description",
                "LeftOperand",
                "PersonMeta",
                "Type"
            ]
        },
        "OrgHierarchyUnitsExpression": {
            "description": "Logic expression for a Org Hierarchy Units type.",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "Description": "OrgHierarchyUnits Description",
                    "LogicType": "OrgHierarchyUnits",
                    "Operator": "InOrBelow",
                    "OrgHierarchyID": "OH_abcdefgh1234567",
                    "Type": "Expression",
                    "UnitID": "OHU_abcdefgh1234567",
                    "UnitName": "OrgHierarchyUnit Name"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                },
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "OrgHierarchyUnits"
                    ],
                    "description": "The logic type for a Org Hierarchy Units type."
                },
                "Operator": {
                    "$ref": "#/definitions/ComparisonOperators"
                },
                "OrgHierarchyID": {
                    "$ref": "#/definitions/OrgHierarchyID"
                },
                "UnitID": {
                    "$ref": "#/definitions/OrgHierarchyUnitID"
                },
                "UnitName": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "The name of the unit."
                }
            },
            "required": [
                "Description",
                "LogicType",
                "OrgHierarchyID"
            ]
        },
        "OrgHierarchyID": {
            "title": "Organization Hierarchy Id",
            "type": "string",
            "pattern": "^OH_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the Organization Hierarchy."
        },
        "OrgHierarchyUnitID": {
            "title": "Org Hierarchy Unit Id",
            "type": "string",
            "pattern": "^OHU_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the Org Hierarchy Unit."
        },
        "OrgHierarchyMetadataExpression": {
            "description": "Logic expression for a Org Hierarchy Metadata type.",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "Description": "OrgHierarchyMetadata Description",
                    "Field": "TeamLead",
                    "LogicType": "OrgHierarchyMetadata",
                    "Operator": "ArrayContains",
                    "OrgHierarchyDef": {
                        "Fields": {
                            "Division": {
                                "OH_abcdefgh1234567": "OrgUnitMetadata0"
                            },
                            "TeamLead": {
                                "OH_abcdefgh1234567": "ManagerField"
                            }
                        },
                        "ID": "OH_abcdefgh1234567",
                        "Type": "ParentChild"
                    },
                    "OrgHierarchyID": "OH_abcdefgh1234567",
                    "Type": "Expression",
                    "Value": "test_value+random@qualtrics.com"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "Description": {
                    "type": "string",
                    "description": "A user-provided description field."
                },
                "Field": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "Text field for the Org Hierarchy Metadata type."
                },
                "LogicType": {
                    "type": "string",
                    "enum": [
                        "OrgHierarchyMetadata"
                    ],
                    "description": "The logic type of the Org Hierarchy Metadata type."
                },
                "Operator": {
                    "type": "string",
                    "enum": [
                        "ArrayContains"
                    ],
                    "description": "Operator for the Org Hierarchy Metadata type."
                },
                "OrgHierarchyDef": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "Org hierarchy definition."
                },
                "OrgHierarchyID": {
                    "$ref": "#/definitions/OrgHierarchyID"
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Expression"
                    ],
                    "description": "The type of org hierarchy metadata expression."
                },
                "Value": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "An attribute associated with `key`."
                }
            },
            "required": [
                "Description",
                "LogicType",
                "Type"
            ]
        },
        "LibraryID": {
            "anyOf": [
                {
                    "$ref": "#/definitions/UserID"
                },
                {
                    "$ref": "#/definitions/GroupID"
                }
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "GroupID": {
            "title": "Group Id",
            "type": "string",
            "pattern": "^GR_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the group."
        },
        "MessageID": {
            "title": "Message Id",
            "type": "string",
            "pattern": "^MS_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the message."
        },
        "AnswerRandomization": {
            "description": "Randomize Answers within a Question.",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object"
                }
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "QuestionType": {
            "title": "Question type",
            "description": "The type of question.",
            "type": "string",
            "enum": [
                "MC",
                "Matrix",
                "Captcha",
                "CS",
                "DB",
                "DD",
                "Draw",
                "DynamicMatrix",
                "FileUpload",
                "GAP",
                "HeatMap",
                "HL",
                "HotSpot",
                "Meta",
                "PGR",
                "RO",
                "SBS",
                "Slider",
                "SS",
                "TE",
                "Timing",
                "TreeSelect"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "Selection": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
                "Display": {
                    "type": "string"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "Selection."
        },
        "QuestionSubSelector": {
            "title": "Question SubSelector",
            "type": "string",
            "enum": [
                "SingleAnswer",
                "DL",
                "GR",
                "DND",
                "Long",
                "Medium",
                "MultipleAnswer",
                "Columns",
                "NoColumns",
                "Short",
                "TX",
                "TXOT",
                "WOTXB",
                "WOTB",
                "WTB",
                "WTXB",
                "WVTB"
            ],
            "x-tags": [
                "Schemas"
            ],
            "description": "Question SubSelector."
        },
        "ImageID": {
            "title": "Image Id",
            "type": "string",
            "pattern": "^IM_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the image."
        },
        "BlockDefinition": {
            "anyOf": [
                {
                    "$ref": "#/definitions/ReferenceBlock"
                },
                {
                    "$ref": "#/definitions/StandardBlock"
                },
                {
                    "$ref": "#/definitions/TrashBlock"
                },
                {
                    "$ref": "#/definitions/ConjointBlock"
                }
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "ReferenceBlock": {
            "description": "Saved survey in the library that can be referenced by other surveys",
            "title": "Reference Block",
            "type": "object",
            "additionalProperties": true,
            "required": [
                "Description",
                "Type",
                "SubType",
                "ID",
                "LibraryID",
                "ReferencedBlockID"
            ],
            "properties": {
                "BlockElements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BlockElements"
                    },
                    "nullable": true
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Standard"
                    ]
                },
                "SubType": {
                    "type": "string",
                    "enum": [
                        "Reference"
                    ]
                },
                "ID": {
                    "$ref": "#/definitions/BlockID"
                },
                "Description": {
                    "type": "string",
                    "nullable": true
                },
                "LibraryID": {
                    "$ref": "#/definitions/LibraryID"
                },
                "ReferencedBlockID": {
                    "$ref": "#/definitions/ReferencedBlockID"
                },
                "Options": {
                    "$ref": "#/definitions/BlockOptions"
                }
            },
            "x-examples": {
                "example": {
                    "Type": "Standard",
                    "SubType": "Reference",
                    "Description": null,
                    "ID": "BL_d7tGuyhg0ec00PH",
                    "LibraryID": "GR_9NzndCXq4GkdUwJ",
                    "ReferencedBlockID": "LB_39jTPoKafNaUF9z",
                    "BlockElements": null
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "BlockElements": {
            "description": "All of the elements contained by the block",
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "description": "Question block element",
                        "title": "Question block element",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                            "Type",
                            "QuestionID"
                        ],
                        "properties": {
                            "Type": {
                                "type": "string",
                                "enum": [
                                    "Question"
                                ]
                            },
                            "QuestionID": {
                                "$ref": "#/definitions/QuestionID"
                            },
                            "SkipLogic": {
                                "$ref": "#/definitions/SkipLogic"
                            }
                        }
                    },
                    {
                        "description": "Page break element",
                        "title": "Page break element",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                            "Type"
                        ],
                        "properties": {
                            "Type": {
                                "type": "string",
                                "enum": [
                                    "Page Break"
                                ]
                            }
                        }
                    }
                ]
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "SkipLogic": {
            "description": "Defines how flow skips to a question, the end of block or end of survey based on logic",
            "type": "array",
            "x-tags": [
                "Schemas"
            ],
            "items": {
                "type": "object",
                "additionalProperties": true,
                "x-examples": {
                    "example": {
                        "ChoiceLocator": "q://QID2/SelectableChoice/2",
                        "Condition": "Selected",
                        "Description": "Condition: <strong title=\"What are you buying?\">What are you buying?</strong> <strong>Is Selected</strong>. Skip To: <strong>End of Survey</strong>.",
                        "Locator": "q://QID2/SelectableChoice/2",
                        "QuestionID": "QID2",
                        "SkipLogicID": 1,
                        "SkipToDescription": "Welcome Stranger <strong>What are you buying?</strong>  <strong>Is Selected</strong>",
                        "SkipToDestination": "ENDOFSURVEY"
                    }
                },
                "properties": {
                    "SkipLogicID": {
                        "description": "The ID of the logic.",
                        "type": "string",
                        "pattern": "[0-9]{1,3}"
                    },
                    "ChoiceID": {
                        "description": "The ID of the choice.",
                        "type": "string",
                        "pattern": "[0-9]{1,3}"
                    },
                    "ChoiceLocator": {
                        "$ref": "#/definitions/Locator"
                    },
                    "Condition": {
                        "description": "All the possible skip logic conditions",
                        "type": "string",
                        "enum": [
                            "Selected",
                            "NotSelected",
                            "Displayed",
                            "NotDisplayed",
                            "GreaterThan",
                            "LessThan",
                            "GreaterThanOrEqual",
                            "LessThanOrEqual",
                            "EqualTo",
                            "NotEqualTo",
                            "Empty",
                            "NotEmpty",
                            "ClickedIn",
                            "NotClickedIn",
                            "Uploaded",
                            "NotUploaded",
                            "Contains",
                            "DoesNotContain",
                            "MatchesRegex"
                        ]
                    },
                    "Description": {
                        "type": "string",
                        "description": "a user-provided description field."
                    },
                    "Locator": {
                        "$ref": "#/definitions/Locator"
                    },
                    "QuestionID": {
                        "$ref": "#/definitions/QuestionID"
                    },
                    "SkipToDescription": {
                        "description": "The text description of the skip condition",
                        "type": "string"
                    },
                    "SkipToDestination": {
                        "description": "Where to send respondents when the condition is satisfied",
                        "oneOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "ENDOFBLOCK",
                                    "ENDOFSURVEY"
                                ]
                            },
                            {
                                "$ref": "#/definitions/SurveyID"
                            }
                        ]
                    }
                },
                "required": [
                    "ChoiceLocator",
                    "Condition",
                    "QuestionID"
                ]
            }
        },
        "ReferencedBlockID": {
            "type": "string",
            "pattern": "^LB_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the Reference Block."
        },
        "BlockOptions": {
            "title": "Block options",
            "type": "object",
            "additionalProperties": true,
            "properties": {
                "BlockLocking": {
                    "description": "Prevents modification of the block and its contents",
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ]
                },
                "BlockPassword": {
                    "description": "Authorization to modify the block",
                    "type": "string"
                },
                "BlockVisiblity": {
                    "type": "string",
                    "enum": [
                        "Collapsed",
                        "Expanded"
                    ]
                },
                "RandomizeQuestions": {
                    "type": "string",
                    "enum": [
                        "false",
                        "RandomWithXPerPage",
                        "RandomWithOnlyX",
                        "Advanced"
                    ]
                },
                "Looping": {
                    "description": "Loop & Merge type",
                    "enum": [
                        "None",
                        "Static",
                        "Question"
                    ]
                },
                "LoopingOptions": {
                    "description": "Options and configuration for Loop & Merge. Includes input fields and randomization",
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "ChoiceGroupLocator": {
                            "$ref": "#/definitions/Locator"
                        },
                        "Locator": {
                            "$ref": "#/definitions/Locator"
                        },
                        "QID": {
                            "$ref": "#/definitions/QuestionID"
                        },
                        "Randomization": {
                            "description": "Type of randomization to apply to the loop ordering",
                            "type": "string",
                            "enum": [
                                "None",
                                "Subset",
                                "All"
                            ]
                        },
                        "Static": {
                            "description": "The (static) fields in the Loop & Merge",
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    }
                },
                "Randomization": {
                    "description": "The configuration for the type of Randomization to apply. Many options based on 3 types of Randomization in RandomizeQuestions",
                    "additionalProperties": true,
                    "properties": {
                        "Advanced": {
                            "description": "contains related configuartions for Randomization options",
                            "type": "object",
                            "additionalProperties": true,
                            "required": [
                                "QuestionsPerPage"
                            ],
                            "properties": {
                                "QuestionsPerPage": {
                                    "$ref": "#/definitions/QuestionsPerPage"
                                },
                                "FixedOrder": {
                                    "description": "Questions to display in a fixed order",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RandomizationElement"
                                    }
                                },
                                "RandomizeAll": {
                                    "description": "Questions to display in a randomized order",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RandomizationElement"
                                    }
                                },
                                "RandomSubSet": {
                                    "description": "Subset of questions to display in a randomized order",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RandomizationElement"
                                    }
                                },
                                "TotalRandSubset": {
                                    "description": "How many of the RandomSubSet questions to show in aggregate for a given respondent",
                                    "type": "string",
                                    "pattern": "[\\d]{1,3}"
                                },
                                "Undisplayed": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RandomizationElement"
                                    }
                                }
                            }
                        },
                        "EvenPresentation": {
                            "description": "Whether or not to balance the number of times each Randomization.Advanced.RandomSubSet question is displayed across all respondents",
                            "type": "boolean"
                        }
                    }
                },
                "NextButton": {
                    "description": "The text on the next button at preview and runtime, or if nextButtonMID is set, the name of the message referred to there",
                    "type": "string"
                },
                "PreviousButton": {
                    "description": "The text on the previous button at preview and runtime, or if previousButtonMID is set, the name of the message referred to there",
                    "type": "string"
                },
                "nextButtonLibraryID": {
                    "$ref": "#/definitions/LibraryID"
                },
                "nextButtonMID": {
                    "$ref": "#/definitions/MessageID"
                },
                "previousButtonLibraryID": {
                    "$ref": "#/definitions/MessageID"
                }
            },
            "x-examples": {
                "example": {
                    "BlockLocking": "true",
                    "BlockPassword": "6dca3fa58e4c508071ecef74d4c9b06bd6879529",
                    "BlockVisibility": "Collapsed",
                    "Looping": "Question",
                    "LoopingOptions": {
                        "ChoiceGroupLocator": "q://QID1/ChoiceGroup/AllChoices?displayLogic=0",
                        "Locator": "q://QID1/ChoiceGroup/AllChoices?displayLogic=0",
                        "QID": "QID1",
                        "Randomization": "All",
                        "Static": {
                            "1": {
                                "2": "Some Text"
                            },
                            "2": {
                                "2": "Some Text"
                            },
                            "3": {
                                "2": "Some Text"
                            }
                        }
                    },
                    "NextButton": "Some Text Here",
                    "PreviousButton": "",
                    "Randomization": {
                        "Advanced": {
                            "QuestionsPerPage": 0
                        }
                    },
                    "RandomizeQuestions": "RandomWithXPerPage",
                    "nextButtonLibraryID": "UR_3Cz41f8fIqINzaR",
                    "nextButtonMID": "",
                    "previousButtonLibraryID": "UR_3Cz41f8fIqINzaR",
                    "previousButtonMID": "MS_9yonPbwVkXaC14p"
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "RandomizationElement": {
            "description": "Either a specific `QuestionID` from `BlockElements`, or a the set of randomized Questions from `Randomization.Advanced.RandomizeAll` or `Randomization.Advanced.RandomSubSet`.",
            "oneOf": [
                {
                    "$ref": "#/definitions/QuestionID"
                },
                {
                    "type": "string",
                    "enum": [
                        "{~Randomized~}",
                        "{~SubSet~}"
                    ]
                }
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "StandardBlock": {
            "description": "A logical grouping of questions, split by pages, with configuration on how to control the flow and visibility of each question. The original block's type is \"Default\"",
            "title": "Standard Block",
            "type": "object",
            "additionalProperties": true,
            "required": [
                "Description",
                "Type"
            ],
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Standard",
                        "Default"
                    ]
                },
                "BlockElements": {
                    "$ref": "#/definitions/BlockElements"
                },
                "ID": {
                    "$ref": "#/definitions/BlockID"
                },
                "Description": {
                    "type": "string",
                    "maxLength": 100
                }
            },
            "x-examples": {
                "example": {
                    "Type": "Standard",
                    "Description": "My Block Name",
                    "ID": "BL_fakeblockid1234",
                    "BlockElements": [
                        {
                            "Type": "Question",
                            "QuestionID": "QID1"
                        }
                    ],
                    "Options": {
                        "BlockLocking": "false",
                        "RandomizeQuestions": "false",
                        "BlockVisibility": "Collapsed"
                    }
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "TrashBlock": {
            "description": "Exactly one Trash block per survey. Questions deleted from the UI are stored here for resuscitation",
            "title": "Trash Block",
            "type": "object",
            "additionalProperties": true,
            "required": [
                "Description",
                "Type"
            ],
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Trash"
                    ]
                },
                "BlockElements": {
                    "$ref": "#/definitions/BlockElements"
                },
                "ID": {
                    "$ref": "#/definitions/BlockID"
                },
                "Description": {
                    "type": "string",
                    "maxLength": 100
                }
            },
            "x-examples": {
                "example": {
                    "Type": "Trash",
                    "Description": "My Trash Block Name",
                    "ID": "BL_fakeblockid1234",
                    "BlockElements": [
                        {
                            "Type": "Question",
                            "QuestionID": "QID1"
                        }
                    ]
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "ConjointBlock": {
            "description": "Experience blocks limit the editable fields on the block.",
            "title": "Conjoint Block",
            "type": "object",
            "additionalProperties": true,
            "required": [
                "Type",
                "SubType"
            ],
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "ExperienceBlock"
                    ]
                },
                "SubType": {
                    "description": "Choice Based Conjoint Blocks hide their elements from editing using the Group Flow element and ViewFlow: false",
                    "type": "string",
                    "enum": [
                        "CBConjoint",
                        "MaxDiff"
                    ]
                }
            },
            "x-examples": {
                "example": {
                    "Type": "ExperienceBlock",
                    "SubType": "CBConjoint",
                    "Description": "Conjoint Block",
                    "ID": "BL_dia0gxVQsvJa0UR",
                    "BlockElements": []
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "FlowDefinition": {
            "title": "Flow definition",
            "type": "object",
            "additionalProperties": true,
            "required": [
                "FlowID",
                "Type",
                "Flow",
                "Properties"
            ],
            "properties": {
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                },
                "Type": {
                    "$ref": "#/definitions/FlowType"
                },
                "Flow": {
                    "$ref": "#/definitions/Flow"
                },
                "Properties": {
                    "$ref": "#/definitions/FlowProperties"
                }
            },
            "x-examples": {
                "example": {
                    "FlowID": "FL_1",
                    "Type": "Root",
                    "Flow": [
                        {
                            "ID": "BL_fakeblockid1234",
                            "Type": "Block",
                            "FlowID": "FL_2"
                        }
                    ],
                    "Properties": {
                        "Count": 2
                    }
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "FlowID": {
            "title": "Flow Id",
            "type": "string",
            "pattern": "^FL_[1-9][0-9]*$",
            "description": "Unique identifier. Should be of form `FL_1`",
            "x-tags": [
                "Schemas"
            ]
        },
        "FlowType": {
            "title": "Flow type",
            "description": "Type of flow element. One of `Authenticator`, `Block`, `BlockRandomizer`, `Branch`, `Conjoint`, `EmbeddedData`, `EndSurvey`, `Group`, `QuotaCheck`, `ReferenceSurvey`, `Root`, `Standard`, `SupplementalData`, `TableOfContents`, `WebService`",
            "type": "string",
            "enum": [
                "Authenticator",
                "Block",
                "BlockRandomizer",
                "Branch",
                "Conjoint",
                "EmbeddedData",
                "EndSurvey",
                "Group",
                "QuotaCheck",
                "ReferenceSurvey",
                "Root",
                "Standard",
                "SupplementalData",
                "TableOfContents",
                "WebService"
            ],
            "x-tags": [
                "Schemas"
            ]
        },
        "Flow": {
            "type": "array",
            "x-examples": {
                "example": {
                    "Type": "EmbeddedData",
                    "EmbeddedData": [
                        {
                            "Description": "Q_TotalDuration",
                            "Type": "Recipient",
                            "Field": "Q_TotalDuration",
                            "VariableType": "Nominal"
                        }
                    ]
                }
            },
            "description": "Definition of the inner flow elements (maximum of 5000)",
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/AuthenticatorFlowElement"
                    },
                    {
                        "$ref": "#/definitions/BlockStandardFlowElement"
                    },
                    {
                        "$ref": "#/definitions/BlockRandomizerFlowElement"
                    },
                    {
                        "$ref": "#/definitions/BranchFlowElement"
                    },
                    {
                        "$ref": "#/definitions/EmbeddedDataFlowElement"
                    },
                    {
                        "$ref": "#/definitions/EndSurveyFlowElement"
                    },
                    {
                        "$ref": "#/definitions/GroupFlowElement"
                    },
                    {
                        "$ref": "#/definitions/ReferenceSurveyFlowElement"
                    },
                    {
                        "$ref": "#/definitions/TableOfContentsFlowElement"
                    },
                    {
                        "$ref": "#/definitions/WebServiceFlowElement"
                    }
                ]
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "AuthenticatorFlowElement": {
            "description": "Require respondents to authenticate (login)",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "FieldData": {
                        "0": {
                            "0": {
                                "Description": "<span class=\"ConjDesc\">If</span>  <span class=\"LeftOpDesc\">undefined</span> <span class=\"OpDesc\">#</span> ",
                                "LogicType": "EmbeddedField",
                                "PanelField": "RecipientEmail1",
                                "Type": "Expression",
                                "fieldLabel": "Label here"
                            },
                            "Type": "If"
                        },
                        "Type": "BooleanExpression"
                    },
                    "FilterDataFields": true,
                    "FlowID": "FL_3",
                    "Options": {
                        "allowRetake": false,
                        "authenticationError": {
                            "SystemMessage": {
                                "Message": "EAUTH02",
                                "Section": "ErrorCodes"
                            }
                        },
                        "failedAuthenticationError": {
                            "SystemMessage": {
                                "Message": "EAUTH05",
                                "Section": "ErrorCodes"
                            }
                        },
                        "loadExistingSession": false,
                        "maxAttempts": 3,
                        "questionText": {
                            "SystemMessage": {
                                "Message": "EAUTH04",
                                "Section": "ErrorCodes"
                            }
                        }
                    },
                    "PanelData": {
                        "LibraryID": "UR_3Cz41f8fIqINzaR",
                        "LogicType": "Panel",
                        "PanelID": "CG_0jjTqUJhwxz7KU5",
                        "Type": "Expression"
                    },
                    "SSOOptions": {
                        "CaptureRespondentInfo": "No",
                        "Type": "Token",
                        "UsePanel": "Yes",
                        "UseSSO": "",
                        "cas": [],
                        "ldap": {
                            "EmailField": "mail",
                            "ExternalDataReferenceField": "",
                            "Filter": "(sAMAccountName=%1)",
                            "FirstNameField": "givenname",
                            "Hostname": "ldap://",
                            "LastNameField": "sn",
                            "Port": "389"
                        },
                        "respondentMap": [],
                        "token": {
                            "EncryptionMethod": "3DES",
                            "Leeway": 300,
                            "MacMethod": "MD5"
                        }
                    },
                    "Type": "Authenticator"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Authenticator"
                    ]
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                },
                "PanelData": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "LibraryID": {
                            "$ref": "#/definitions/UserID"
                        },
                        "PanelID": {
                            "$ref": "#/definitions/PanelID"
                        },
                        "Type": {
                            "type": "string",
                            "enum": [
                                "Expression"
                            ],
                            "description": "Type of SSO option."
                        },
                        "LogicType": {
                            "type": "string",
                            "enum": [
                                "Panel"
                            ],
                            "description": "Logic type."
                        }
                    }
                },
                "FieldData": {
                    "$ref": "#/definitions/BranchLogic"
                },
                "FilterDataFields": {
                    "type": "boolean",
                    "description": "If true, filter data fields."
                },
                "SSOOptions": {
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                        "Type"
                    ],
                    "description": "SSO options.",
                    "properties": {
                        "CaptureRespondentInfo": {
                            "type": "string",
                            "enum": [
                                "Yes",
                                "No"
                            ],
                            "description": "Capture respondent info."
                        },
                        "cas": {
                            "type": "array",
                            "maxItems": 0,
                            "description": "Central Authentication Service.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ldap": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": " Lightweight Directory Access Protocol",
                            "properties": {
                                "Hostname": {
                                    "type": "string",
                                    "maxLength": 100,
                                    "description": "Hostname."
                                },
                                "Port": {
                                    "type": "string",
                                    "maxLength": 100,
                                    "description": "Port."
                                },
                                "EmailField": {
                                    "type": "string",
                                    "maxLength": 100,
                                    "description": "Email field."
                                },
                                "ExternalDataReferenceField": {
                                    "type": "string",
                                    "maxLength": 100,
                                    "description": "External data reference field."
                                },
                                "Filter": {
                                    "type": "string",
                                    "maxLength": 100,
                                    "description": "Filter."
                                },
                                "FirstNameField": {
                                    "type": "string",
                                    "maxLength": 100,
                                    "description": "Field for first name."
                                },
                                "LastNameField": {
                                    "type": "string",
                                    "maxLength": 100,
                                    "description": "Field for last name."
                                }
                            }
                        },
                        "respondentMap": {
                            "type": "array",
                            "minItems": 0,
                            "maxItems": 100,
                            "description": "Respondent map.",
                            "items": {
                                "type": "object",
                                "additionalProperties": true,
                                "description": "Object.",
                                "properties": {
                                    "key": {
                                        "type": "string",
                                        "description": "A unique identifier for a `value`."
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "An attribute associated with `key`."
                                    }
                                }
                            }
                        },
                        "token": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "Token.",
                            "properties": {
                                "EncryptionMethod": {
                                    "type": "string",
                                    "enum": [
                                        "3DES",
                                        "AES128",
                                        "BLOWFISH"
                                    ],
                                    "description": "Encryption method for the token."
                                },
                                "Key": {
                                    "type": "string",
                                    "description": "Token key."
                                },
                                "Leeway": {
                                    "type": "integer",
                                    "description": "Leeway."
                                },
                                "MacMethod": {
                                    "type": "string",
                                    "enum": [
                                        "md5",
                                        "MD5",
                                        "sha1",
                                        "sha256",
                                        "sha512"
                                    ],
                                    "description": "MacMethod."
                                },
                                "BlockCipher": {
                                    "type": "string",
                                    "enum": [
                                        "CBC",
                                        "ECB"
                                    ],
                                    "description": "Block Cipher."
                                }
                            }
                        },
                        "Type": {
                            "type": "string",
                            "enum": [
                                "Token",
                                "CAS",
                                "LDAP",
                                "LTI",
                                "Shibboleth",
                                "UseBrandSettings",
                                "GoogleOpenID",
                                "Facebook"
                            ],
                            "description": "SSO option type."
                        },
                        "UsePanel": {
                            "type": "string",
                            "enum": [
                                "Yes",
                                "No"
                            ],
                            "description": "Use Panel."
                        },
                        "UsePerson": {
                            "type": "string",
                            "enum": [
                                "Yes",
                                "No"
                            ],
                            "description": "Use person."
                        },
                        "UseSSO": {
                            "type": "string",
                            "enum": [
                                "Yes",
                                "No"
                            ],
                            "description": "Use SSO."
                        }
                    }
                },
                "Options": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "SSO options.",
                    "properties": {
                        "maxAttempts": {
                            "type": "integer",
                            "description": "Maximum number of attempts allowed."
                        },
                        "authenticationError": {
                            "$ref": "#/definitions/AuthenticatorMessage"
                        },
                        "failedAuthenticationError": {
                            "$ref": "#/definitions/AuthenticatorMessage"
                        },
                        "questionText": {
                            "$ref": "#/definitions/AuthenticatorMessage"
                        },
                        "allowRetake": {
                            "type": "boolean",
                            "description": "If true, allow retake."
                        },
                        "loadExistingSession": {
                            "type": "boolean",
                            "description": "If true, load existing session."
                        }
                    }
                },
                "Flow": {
                    "$ref": "#/definitions/Flow"
                }
            },
            "required": [
                "Type",
                "PanelData",
                "FieldData",
                "FilterDataFields",
                "SSOOptions",
                "Options"
            ]
        },
        "PanelID": {
            "title": "Panel Id",
            "type": "string",
            "pattern": "^CG_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the Panel."
        },
        "AuthenticatorMessage": {
            "type": "object",
            "additionalProperties": true,
            "x-tags": [
                "Schemas"
            ],
            "description": "Authenticator message.",
            "properties": {
                "SystemMessage": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "System message.",
                    "properties": {
                        "Section": {
                            "type": "string",
                            "enum": [
                                "ErrorCodes"
                            ],
                            "description": "Section of system message."
                        },
                        "Message": {
                            "type": "string",
                            "pattern": "^EAUTH\\d+$",
                            "description": "System message."
                        }
                    }
                }
            }
        },
        "BlockStandardFlowElement": {
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "FlowID": "FL_2",
                    "ID": "BL_2glfgqNFhydpGeN",
                    "Type": "Block"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "Block standard flow element.",
            "properties": {
                "ID": {
                    "$ref": "#/definitions/BlockID"
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Block",
                        "Standard"
                    ],
                    "description": "The type of block."
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                }
            }
        },
        "BlockRandomizerFlowElement": {
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "EvenPresentation": true,
                    "Flow": [
                        {
                            "FlowID": "FL_7",
                            "ID": "BL_2glfgqNFhydpGeN",
                            "Type": "Block"
                        },
                        {
                            "FlowID": "FL_8",
                            "ID": "BL_8nXdbHPMV8Y5GpT",
                            "Type": "Block"
                        }
                    ],
                    "FlowID": "FL_6",
                    "SubSet": 2,
                    "Type": "BlockRandomizer"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "Block randomizer flow.",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "BlockRandomizer"
                    ],
                    "description": "Type of block randomizer."
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                },
                "SubSet": {
                    "type": "integer",
                    "description": "Subset number."
                },
                "EvenPresentation": {
                    "type": "boolean",
                    "description": "If true, provide even presentation."
                },
                "Flow": {
                    "$ref": "#/definitions/Flow"
                }
            }
        },
        "BranchFlowElement": {
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "BranchLogic": {
                        "0": {
                            "0": {
                                "ChoiceLocator": "q://QID2/SelectableChoice/1",
                                "Description": "<span class=\"ConjDesc\">If</span> <span class=\"QuestionDesc\">Which branch would you like to take?</span> <span class=\"LeftOpDesc\">That one</span> <span class=\"OpDesc\">Is Selected</span> ",
                                "LeftOperand": "q://QID2/SelectableChoice/1",
                                "LogicType": "Question",
                                "Operator": "Selected",
                                "QuestionID": "QID2",
                                "QuestionIDFromLocator": "QID2",
                                "QuestionIsInLoop": "no",
                                "Type": "Expression"
                            },
                            "Type": "If"
                        },
                        "Type": "BooleanExpression"
                    },
                    "Description": "New Branch",
                    "Flow": [
                        {
                            "FlowID": "FL_11",
                            "ID": "BL_eJ85btkKBACZM7r",
                            "Type": "Block"
                        }
                    ],
                    "FlowID": "FL_10",
                    "Type": "Branch"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "Branch flow element.",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Branch"
                    ],
                    "description": "Type of branch flow."
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                },
                "Description": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "A user-provided description of the block flow element."
                },
                "BranchLogic": {
                    "$ref": "#/definitions/BranchLogic"
                }
            }
        },
        "EmbeddedDataFlowElement": {
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "Type": "EmbeddedData",
                    "FlowID": "FL_3",
                    "EmbeddedData": [
                        {
                            "Description": "edField",
                            "Type": "Recipient",
                            "Field": "edField",
                            "VariableType": "Nominal",
                            "DataVisibility": []
                        }
                    ]
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "Embedded data flow element.",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "EmbeddedData"
                    ],
                    "description": "Type of embedded data flow element."
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                },
                "EmbeddedData": {
                    "type": "array",
                    "description": "Embedded data.",
                    "items": {
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                            "Description": {
                                "type": "string",
                                "maxLength": 100,
                                "description": "A user-provided description of the embedded data."
                            },
                            "Type": {
                                "type": "string",
                                "enum": [
                                    "Recipient",
                                    "Custom",
                                    "EmbeddedData"
                                ],
                                "description": "The type of embedded data."
                            },
                            "Field": {
                                "type": "string",
                                "maxLength": 100,
                                "description": "Field for embedded data."
                            },
                            "VariableType": {
                                "type": "string",
                                "enum": [
                                    "Nominal",
                                    "MultiValueNominal",
                                    "Ordinal",
                                    "Scale",
                                    "String",
                                    "Date",
                                    "FilterOnly",
                                    "Filter Only"
                                ],
                                "description": "Variable type."
                            },
                            "DataVisibility": {
                                "type": "object",
                                "description": "Visibility of data.",
                                "properties": {
                                    "Private": {
                                        "type": "boolean",
                                        "description": "If true, data is private."
                                    },
                                    "Hidden": {
                                        "type": "boolean",
                                        "description": "If true, data is hidden."
                                    }
                                }
                            },
                            "AnalyzeText": {
                                "type": "boolean",
                                "description": "If true, analyze embedded data text."
                            },
                            "Value": {
                                "type": "string",
                                "maxLength": 100,
                                "description": "An attribute associated with `key`."
                            }
                        },
                        "required": [
                            "Description",
                            "Type",
                            "Field"
                        ]
                    }
                }
            }
        },
        "EndSurveyFlowElement": {
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "Type": "EndSurvey",
                    "FlowID": "FL_999999",
                    "EndingType": "Default",
                    "Options": {}
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "End of survey flow element.",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "EndSurvey"
                    ],
                    "description": "Type of end survey flow element."
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                }
            }
        },
        "GroupFlowElement": {
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "Description": "My flow group",
                    "Flow": [
                        {
                            "FlowID": "FL_13",
                            "ID": "BL_8nXdbHPMV8Y5GpT",
                            "Type": "Block"
                        },
                        {
                            "FlowID": "FL_14",
                            "ID": "BL_2glfgqNFhydpGeN",
                            "Type": "Block"
                        }
                    ],
                    "FlowID": "FL_12",
                    "Type": "Group"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "Group flow element.",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "Group"
                    ],
                    "description": "Type of group flow element."
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                },
                "Description": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "A user-provided description of the group flow element."
                },
                "Flow": {
                    "$ref": "#/definitions/Flow"
                }
            }
        },
        "ReferenceSurveyFlowElement": {
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "Type": "ReferenceSurvey",
                    "ID": "LS_5n0oPAgaZHHqZsV",
                    "FlowID": "FL_3",
                    "Description": "My survey - Copy",
                    "LibraryID": "UR_do0D090gG6afU3j"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "Reference survey flow element.",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "ReferenceSurvey"
                    ],
                    "description": "The type of reference survey flow element."
                },
                "ID": {
                    "$ref": "#/definitions/LibrarySurveyID"
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                },
                "Description": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "A user-provided description of the reference survey flow element."
                },
                "LibraryID": {
                    "$ref": "#/definitions/GroupID"
                }
            }
        },
        "LibrarySurveyID": {
            "title": "Library Survey Id",
            "type": "string",
            "pattern": "^LS_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the survey library."
        },
        "TableOfContentsFlowElement": {
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "Description": "Why Survey API",
                    "Flow": [
                        {
                            "FlowID": "FL_16",
                            "ID": "BL_2glfgqNFhydpGeN",
                            "Type": "Block"
                        },
                        {
                            "FlowID": "FL_17",
                            "ID": "BL_8nXdbHPMV8Y5GpT",
                            "Type": "Block"
                        }
                    ],
                    "FlowID": "FL_15",
                    "Options": {
                        "ShowSidebar": "Yes",
                        "TocConclusion": "Yes",
                        "UseHeaderLibrary": ""
                    },
                    "Type": "TableOfContents"
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "The table of contents flow element.",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "TableOfContents"
                    ],
                    "description": "The type of table of contents flow element."
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                },
                "Description": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "A user-provided description of the table of contents flow element."
                },
                "Options": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "Options for the table of contents flow element.",
                    "properties": {
                        "ShowSidebar": {
                            "type": "string",
                            "enum": [
                                "Yes",
                                "No"
                            ],
                            "description": "If `Yes`, show sidebar."
                        },
                        "TocConclusion": {
                            "type": "string",
                            "enum": [
                                "Yes",
                                "No"
                            ],
                            "description": "If `Yes`, show table of contents conclusion."
                        }
                    }
                },
                "Flow": {
                    "$ref": "#/definitions/Flow"
                }
            }
        },
        "WebServiceFlowElement": {
            "type": "object",
            "x-examples": {
                "example": {
                    "Type": "WebService",
                    "FlowID": "FL_42156782",
                    "URL": "http://",
                    "Method": "GET",
                    "RequestParams": [],
                    "EditBodyParams": [],
                    "Body": [],
                    "ContentType": "application/x-www-form-urlencoded",
                    "Headers": [],
                    "ResponseMap": [],
                    "FireAndForget": false,
                    "StringifyValues": true
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "description": "Web service flow element.",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "WebService"
                    ],
                    "description": "The type of web service flow element."
                },
                "FlowID": {
                    "$ref": "#/definitions/FlowID"
                },
                "URL": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1000,
                    "description": "The URL of the web service flow element."
                },
                "Method": {
                    "type": "string",
                    "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "PATCH",
                        "DELETE"
                    ],
                    "description": "The method of the web service flow element."
                },
                "RequestParams": {
                    "$ref": "#/definitions/KeyValuePairArray"
                },
                "EditBodyParams": {
                    "$ref": "#/definitions/KeyValuePairArray"
                },
                "Body": {
                    "$ref": "#/definitions/KeyValuePairArray"
                },
                "ContentType": {
                    "type": "string",
                    "enum": [
                        "application/x-www-form-urlencoded",
                        "application/json"
                    ],
                    "description": "The content type of the web service flow element."
                },
                "Headers": {
                    "$ref": "#/definitions/KeyValuePairArray"
                },
                "ResponseMap": {
                    "$ref": "#/definitions/KeyValuePairArray"
                },
                "FireAndForget": {
                    "type": "boolean",
                    "description": "If true, \"fire and forget.\""
                },
                "StringifyValues": {
                    "type": "boolean",
                    "description": "If true, stringify values."
                }
            }
        },
        "KeyValuePairArray": {
            "type": "array",
            "maxItems": 100,
            "items": {
                "$ref": "#/definitions/KeyValuePairArrayItem"
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "KeyValuePairArrayItem": {
            "type": "object",
            "additionalProperties": true,
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "key": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "A unique identifier for a `value`."
                },
                "value": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "An attribute associated with a `key`."
                }
            },
            "required": [
                "key",
                "value"
            ]
        },
        "FlowProperties": {
            "type": "object",
            "additionalProperties": true,
            "description": "Provides information to describe the flow structure such as `Count`, which is the total number of flow elements.",
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "Count": {
                    "type": "integer",
                    "description": "The total number of flow element."
                }
            }
        },
        "ScoringDefinition": {
            "title": "Scoring definition",
            "type": "object",
            "additionalProperties": true,
            "x-examples": {
                "example": {
                    "ScoringCategories": [
                        {
                            "ID": "SC_cT0X8utcTBtf20R",
                            "Name": "Score",
                            "Description": ""
                        },
                        {
                            "ID": "SC_24cCruBibYfas9T",
                            "Name": "Qualtrics score",
                            "Description": ""
                        }
                    ],
                    "ScoringCategoryGroups": [],
                    "DefaultScoringCategory": "SC_cT0X8utcTBtf20R",
                    "ScoringSummaryCategory": "SC_cT0X8utcTBtf20R",
                    "ScoringSummaryAfterQuestions": true,
                    "ScoringSummaryAfterSurvey": true,
                    "AutoScoringCategory": null,
                    "IgnoreNullValues": true
                }
            },
            "x-tags": [
                "Schemas"
            ],
            "properties": {
                "ScoringCategories": {
                    "type": "array",
                    "description": "Scoring categories.",
                    "items": {
                        "type": "object",
                        "additionalProperties": true,
                        "description": "Scoring categories.",
                        "properties": {
                            "Description": {
                                "type": "string",
                                "description": "A user-provided description of the survey scoring."
                            },
                            "ID": {
                                "$ref": "#/definitions/ScoringID"
                            },
                            "Name": {
                                "type": "string",
                                "description": "The names of the scoring categories."
                            }
                        },
                        "required": [
                            "Description",
                            "ID",
                            "Name"
                        ]
                    }
                },
                "ScoringCategoryGroups": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                            "Categories": {
                                "type": "array",
                                "description": "The scoring categories.",
                                "items": {
                                    "$ref": "#/definitions/ScoringID"
                                }
                            },
                            "ID": {
                                "$ref": "#/definitions/ScoringGroupID"
                            },
                            "Name": {
                                "type": "string",
                                "description": "The names of the scoring category groups."
                            }
                        },
                        "required": [
                            "Categories",
                            "ID",
                            "Name"
                        ]
                    }
                },
                "ScoringSummaryCategory": {
                    "$ref": "#/definitions/ScoringID"
                },
                "ScoringSummaryAfterQuestions": {
                    "type": "boolean",
                    "description": "If scoring summary is after questions."
                },
                "ScoringSummaryAfterSurvey": {
                    "type": "boolean",
                    "description": "If scoring summary is after survey."
                },
                "DefaultScoringCategory": {
                    "$ref": "#/definitions/ScoringID"
                },
                "AutoScoringCategory": {
                    "type": "string",
                    "description": "The automated scoring category."
                }
            },
            "required": [
                "ScoringCategories",
                "ScoringCategoryGroups",
                "ScoringSummaryCategory",
                "ScoringSummaryAfterQuestions",
                "ScoringSummaryAfterSurvey",
                "DefaultScoringCategory",
                "AutoScoringCategory"
            ]
        },
        "ScoringID": {
            "title": "Scoring Id",
            "type": "string",
            "pattern": "^SC_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the scoring."
        },
        "ScoringGroupID": {
            "title": "Scoring Group Id",
            "type": "string",
            "pattern": "^SCG_[a-zA-Z0-9]{11,15}$",
            "x-tags": [
                "Schemas"
            ],
            "description": "The unique identifier for the scoring group."
        },
        "ProjectInfoDefinition": {
            "title": "Project info definition",
            "type": "object",
            "additionalProperties": true,
            "required": [
                "SurveyID",
                "ProjectCategory",
                "ProjectType",
                "SchemaVersion",
                "CompositionType"
            ],
            "properties": {
                "SurveyID": {
                    "$ref": "#/definitions/SurveyID"
                },
                "ProjectCategory": {
                    "$ref": "#/definitions/ProjectCategory"
                },
                "ProjectType": {
                    "type": "string",
                    "pattern": "^[a-zA-Z]+$",
                    "minLength": 5,
                    "maxLength": 50,
                    "nullable": true
                },
                "SchemaVersion": {
                    "type": "string",
                    "enum": [
                        "1.1.0"
                    ]
                },
                "CompositionType": {
                    "type": "string",
                    "nullable": true
                },
                "ContentBundle": {
                    "type": "object",
                    "additionalProperties": true,
                    "nullable": true,
                    "required": [
                        "BundleShortName",
                        "RegistrySha",
                        "RegistryVersion",
                        "SurveyInputVariables"
                    ],
                    "properties": {
                        "BundleShortName": {
                            "type": "string",
                            "maxLength": 100
                        },
                        "RegistrySha": {
                            "type": "string",
                            "maxLength": 100
                        },
                        "RegistryVersion": {
                            "type": "string",
                            "maxLength": 100
                        },
                        "SurveyInputVariables": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                }
            },
            "x-tags": [
                "Schemas"
            ]
        },
        "ProjectCategory": {
            "description": "Project category of the survey",
            "type": "string",
            "enum": [
                "CORE",
                "CX",
                "EX",
                "BX",
                "PX"
            ],
            "x-tags": [
                "Schemas"
            ]
        }
    }
}